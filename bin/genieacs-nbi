#!/usr/bin/env node
"use strict";const e=require("path"),t=require("fs"),n=require("os"),r=require("mongodb"),s=require("parsimmon"),a=require("ipaddr.js"),i=require("cluster"),o=require("http"),l=require("https"),c=require("url"),u=require("querystring"),d=require("vm"),p=require("crypto"),f=require("later"),m=require("dgram"),h=require("child_process"),g=require("yaml"),w=require("jsonwebtoken");function _(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}const y=_(s),O=_(i);let E,S,T,v,A,b,N=e.resolve(__dirname,"..");for(;!t.existsSync(N+"/package.json");){const t=e.resolve(N,"..");if(t===N){N=process.cwd();break}N=t}const I={EXT_DIR:{type:"path",default:e.resolve(N,"config/ext")},MONGODB_CONNECTION_URL:{type:"string",default:"mongodb://ec2-15-164-103-145.ap-northeast-2.compute.amazonaws.com/genieacs"},CWMP_WORKER_PROCESSES:{type:"int",default:0},CWMP_PORT:{type:"int",default:7547},CWMP_INTERFACE:{type:"string",default:"0.0.0.0"},CWMP_SSL_CERT:{type:"string",default:""},CWMP_SSL_KEY:{type:"string",default:""},CWMP_LOG_FILE:{type:"path",default:""},CWMP_ACCESS_LOG_FILE:{type:"path",default:"./log/hacs.log"},NBI_WORKER_PROCESSES:{type:"int",default:0},NBI_PORT:{type:"int",default:7557},NBI_INTERFACE:{type:"string",default:"0.0.0.0"},NBI_SSL_CERT:{type:"string",default:""},NBI_SSL_KEY:{type:"string",default:""},NBI_LOG_FILE:{type:"path",default:""},NBI_ACCESS_LOG_FILE:{type:"path",default:"./log/hacs.log"},FS_WORKER_PROCESSES:{type:"int",default:0},FS_PORT:{type:"int",default:7567},FS_INTERFACE:{type:"string",default:"0.0.0.0"},FS_SSL_CERT:{type:"string",default:""},FS_SSL_KEY:{type:"string",default:""},FS_URL_PREFIX:{type:"string",default:""},FS_LOG_FILE:{type:"path",default:""},FS_ACCESS_LOG_FILE:{type:"path",default:"./log/hacs.log"},UI_WORKER_PROCESSES:{type:"int",default:0},UI_PORT:{type:"int",default:7577},UI_INTERFACE:{type:"string",default:"0.0.0.0"},UI_SSL_CERT:{type:"string",default:""},UI_SSL_KEY:{type:"string",default:""},UI_LOG_FILE:{type:"path",default:""},UI_ACCESS_LOG_FILE:{type:"path",default:"./log/log_ui.log"},UI_JWT_SECRET:{type:"string",default:""},UDP_CONNECTION_REQUEST_PORT:{type:"int",default:0},FORWARDED_HEADER:{type:"string",default:""},DOWNLOAD_TIMEOUT:{type:"int",default:3600},EXT_TIMEOUT:{type:"int",default:3e3},MAX_CACHE_TTL:{type:"int",default:86400},DEBUG_FILE:{type:"path",default:""},DEBUG_FORMAT:{type:"string",default:"yaml"},DEBUG:{type:"bool",default:!0},RETRY_DELAY:{type:"int",default:300},SESSION_TIMEOUT:{type:"int",default:30},CONNECTION_REQUEST_TIMEOUT:{type:"int",default:2e3},GPN_NEXT_LEVEL:{type:"int",default:0},GPV_BATCH_SIZE:{type:"int",default:32},MAX_DEPTH:{type:"int",default:16},COOKIES_PATH:{type:"string",default:"/"},LOG_FORMAT:{type:"string",default:"json"},ACCESS_LOG_FORMAT:{type:"string",default:""},MAX_CONCURRENT_REQUESTS:{type:"int",default:20},DATETIME_MILLISECONDS:{type:"bool",default:!0},BOOLEAN_LITERAL:{type:"bool",default:!0},CONNECTION_REQUEST_ALLOW_BASIC_AUTH:{type:"bool",default:!1},MAX_COMMIT_ITERATIONS:{type:"int",default:32},DEVICE_ONLINE_THRESHOLD:{type:"int",default:4e3}},$={};function C(t,n,r=!1){if(null!=$[t])return!0;function s(t,n){switch(n){case"int":return Number(t);case"bool":return["true","1"].includes(String(t).trim().toLowerCase());case"string":return String(t);case"path":return t?e.resolve(t):"";default:return null}}"CONFIG_DIR"!==t&&"config-dir"!==t||(E=E||e.resolve(N,n)),"CWMP_SSL"!==t&&"cwmp-ssl"!==t||(S=S||String(n).toLowerCase().trim()),"NBI_SSL"!==t&&"nbi-ssl"!==t||(T=T||String(n).toLowerCase().trim()),"FS_SSL"!==t&&"fs-ssl"!==t||(v=v||String(n).toLowerCase().trim()),"UI_SSL"!==t&&"ui-ssl"!==t||(A=A||String(n).toLowerCase().trim()),"FS_HOSTNAME"!==t&&"fs-hostname"!==t||(b=b||String(n).trim()),"PRESETS_CACHE_DURATION"!==t&&"presets-cache-duration"!==t||C("MAX_CACHE_TTL",n),"GET_PARAMETER_NAMES_DEPTH_THRESHOLD"!==t&&"get-parameter-names-depth-threshold"!==t||C("GPN_NEXT_LEVEL",n),"TASK_PARAMETERS_BATCH_SIZE"!==t&&"task-parameters-batch-size"!==t||C("GPV_BATCH_SIZE",n),"FS_IP"!==t&&"fs-ip"!==t||C("FS_HOSTNAME",n);let a=null;for(const[e,i]of Object.entries(I)){let o=e;if(r&&(o=o.toLowerCase().replace(/_/g,"-")),t===o?(a=s(n,i.type),o=e):t.startsWith(o+"-")&&(a=s(n,i.type),o=`${e}-${t.slice(e.length+1)}`),null!=a)return $[o]=a,process.env["GENIEACS_"+o]=a,!0}return!1}const x=process.argv.slice(2);for(;x.length;){const e=x.shift();if("-"===e[0]){const t=x.shift();C(e.slice(2),t,!0)}}for(const[e,t]of Object.entries(process.env))e.startsWith("GENIEACS_")&&C(e.slice(9),t);const D=E?E+"/config.json":N+"/config/config.json";if(t.existsSync(D)){const e=JSON.parse(t.readFileSync(D).toString());for(const[t,n]of Object.entries(e))C(t,n)||(process.env["GENIEACS_"+t]=""+n)}if(E&&C("EXT_DIR",E+"/ext"),["true","1"].includes(S)){const e=E||N+"/config";C("CWMP_SSL_CERT",e+"/cwmp.crt"),C("CWMP_SSL_KEY",e+"/cwmp.key")}if(["true","1"].includes(T)){const e=E||N+"/config";C("NBI_SSL_CERT",e+"/cwmp.crt"),C("NBI_SSL_KEY",e+"/cwmp.key")}if(["true","1"].includes(v)){const e=E||N+"/config";C("FS_SSL_CERT",e+"/cwmp.crt"),C("FS_SSL_KEY",e+"/cwmp.key")}if(["true","1"].includes(A)){const e=E||N+"/config";C("UI_SSL_CERT",e+"/cwmp.crt"),C("UI_SSL_KEY",e+"/cwmp.key")}if(b){const e=$.FS_PORT||7567;C("FS_URL_PREFIX",(!!$.FS_SSL_CERT?"https":"http")+`://${b}:${e}/`)}for(const[e,t]of Object.entries(I))null!=t.default&&C(e,t.default);function k(e,t){if(!t)return $[e];let n=$[e=`${e}-${t}`];if(null!=n)return n;let r=e.lastIndexOf("-");return n=$[e.slice(0,r)],null!=n?n:(r=e.lastIndexOf("-",r-1),n=$[e.slice(0,r)],null!=n?n:(r=e.lastIndexOf("-",r-1),n=$[e.slice(0,r)],null!=n?n:(r=e.lastIndexOf("-",r-1),r>0&&(n=$[e.slice(0,r)],null!=n)?n:null)))}function L(e){return e.replace(/[-[\]/{}()*+?.\\^$|]/g,"\\$&")}function P(e){const t={b:"\b",f:"\f",n:"\n",r:"\r",t:"\t"};return e.replace(/\\(u[0-9a-fA-F]{4}|[^u])/,(e,n)=>{const r=n.charAt(0),s=n.slice(1);return"u"===r?String.fromCharCode(parseInt(s,16)):t.hasOwnProperty(r)?t[r]:r})}function R(e,t){return y.default.seqMap(t,y.default.seq(e,t).many(),(e,t)=>t.reduce((e,t)=>{const[n,r]=t;return Array.isArray(e)&&n===e[0]?e.concat([r]):Array.isArray(r)&&n===r[0]?[n,e].concat(r.slice(1)):[n,e,r]},e))}const M=y.default.createLanguage({ComparisonOperator:function(){return y.default.alt(y.default.string(">="),y.default.string("<>"),y.default.string("<="),y.default.string("="),y.default.string(">"),y.default.string("<")).skip(y.default.optWhitespace)},LikeOperator:function(){return y.default.alt(y.default.regexp(/like/i).result("LIKE").desc("LIKE"),y.default.regexp(/not\s+like/i).result("NOT LIKE").desc("NOT LIKE")).notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace)},IsNullOperator:function(){return y.default.alt(y.default.regexp(/is\s+null/i).result("IS NULL").desc("IS NULL"),y.default.regexp(/is\s+not\s+null/i).result("IS NOT NULL").desc("IS NOT NULL")).notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace)},NotOperator:function(){return y.default.regexp(/not/i).result("NOT").notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace).desc("NOT")},AndOperator:function(){return y.default.regexp(/and/i).result("AND").notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace).desc("AND")},OrOperator:function(){return y.default.regexp(/or/i).result("OR").notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace).desc("OR")},Parameter:function(e){return y.default.alt(y.default.regexp(/[a-zA-Z0-9_.*-]+/),e.Expression.wrap(y.default.string("{").skip(y.default.optWhitespace),y.default.string("}"))).atLeast(1).map(e=>["PARAM",e.length>1?["||"].concat(e):e[0]]).skip(y.default.optWhitespace).desc("parameter")},StringValueSql:function(){return y.default.regexp(/'([^']*)'/,1).atLeast(1).skip(y.default.optWhitespace).map(e=>e.join("'")).desc("string")},StringValueJs:function(){return y.default.regexp(/"((?:\\.|.)*?)"/,1).skip(y.default.optWhitespace).map(P).desc("string")},NumberValue:function(){return y.default.regexp(/-?(0|[1-9][0-9]*)([.][0-9]+)?([eE][+-]?[0-9]+)?/).notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace).map(Number).desc("number")},BooleanValue:function(){return y.default.alt(y.default.regexp(/true/i).result(!0).desc("TRUE"),y.default.regexp(/false/i).result(!1).desc("FALSE")).notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace)},NullValue:function(){return y.default.regexp(/null/i).notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace).result(null).desc("NULL")},FuncValue:function(e){return y.default.seqMap(y.default.regexp(/([a-zA-Z0-9_]+)/,1).skip(y.default.optWhitespace).desc("function"),e.ExpressionList.wrap(y.default.string("(").skip(y.default.optWhitespace),y.default.string(")").skip(y.default.optWhitespace)),(e,t)=>["FUNC",e.toUpperCase()].concat(t))},WhenPair:function(e){return y.default.seq(y.default.regexp(/when/i).notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace).desc("WHEN").then(e.Expression),y.default.regexp(/then/i).notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace).desc("THEN").then(e.Expression))},CaseStatement:function(e){return y.default.seqMap(y.default.regexp(/case/i).result("CASE").notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace).desc("CASE"),e.WhenPair.many(),y.default.regexp(/else/i).notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace).desc("ELSE").then(e.Expression).map(e=>[[!0,e]]).fallback(null).skip(y.default.regex(/end/i).notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/))).skip(y.default.optWhitespace),(...e)=>e.flat(2))},Value:function(e){return y.default.alt(e.NullValue,e.BooleanValue,e.NumberValue,e.StringValueSql,e.StringValueJs,e.FuncValue,e.CaseStatement)},ValueExpression:function(e){return R(y.default.string("||").skip(y.default.optWhitespace),R(y.default.alt(y.default.string("+"),y.default.string("-")).skip(y.default.optWhitespace),R(y.default.alt(y.default.string("*"),y.default.string("/")).skip(y.default.optWhitespace),y.default.alt(e.Value,e.Parameter,e.Expression.wrap(y.default.string("(").skip(y.default.optWhitespace),y.default.string(")").skip(y.default.optWhitespace))))))},Comparison:function(e){return y.default.alt(y.default.seqMap(e.ValueExpression,e.IsNullOperator,(e,t)=>[t,e]),y.default.seqMap(e.ValueExpression,e.ComparisonOperator,e.ValueExpression,(e,t,n)=>[t,e,n]),y.default.seqMap(e.ValueExpression,e.LikeOperator,e.ValueExpression.skip(y.default.regexp(/escape/i).result("ESCAPE").skip(y.default.whitespace).desc("ESCAPE")),e.ValueExpression,(e,t,n,r)=>[t,e,n,r]),y.default.seqMap(e.ValueExpression,e.LikeOperator,e.ValueExpression,(e,t,n)=>[t,e,n]))},ExpressionList:function(e){return e.Expression.sepBy(y.default.string(",").skip(y.default.optWhitespace))},Expression:function(e){return R(e.OrOperator,R(e.AndOperator,(t=e.NotOperator,n=e.Comparison.or(e.ValueExpression),y.default.seq(t,n).or(n)))).trim(y.default.optWhitespace);var t,n}});function j(e){return e?M.Expression.tryParse(e):null}let U=new Map,H=new Map;class q{constructor(e){let t=0,n=0;const r=e.map((e,r)=>{if(Array.isArray(e)){t|=1<<r;return`[${e.map(e=>`${e[0].toString()}:${JSON.stringify(e[1])}`).join(",")}]`}return"*"===e&&(n|=1<<r),e});let s=0;const a=r.map((e,t)=>(s+=e.length)+t);this.segments=e,this.wildcard=n,this.alias=t,this._string=r.join("."),this._stringIndex=a}static parseAlias(e,t){const n=[];for(;t<e.length&&"]"!==e[t];){const{index:r,segments:s}=q.parsePath(e,t);let a=t=r+1;for(;"]"!==e[a]&&","!==e[a];){if('"'===e[a]&&t===a)for(++a;'"'!==e[a]||"\\"===e[a-1];)if(++a>=e.length)throw new Error("Invalid alias expression");if(++a>=e.length)throw new Error("Invalid alias expression")}let i=e.slice(t,a).trim();if(t=a,'"'===i[0])try{i=JSON.parse(i)}catch(e){throw new Error("Invalid alias expression")}n.push([new q(s),i]),","===e[t]&&++t}return n.sort((e,t)=>e[0].toString()>t[0].toString()?1:e[0].toString()<t[0].toString()?-1:e[1]>t[1]?1:e[1]<t[1]?-1:0),Object.freeze(n),{index:t,alias:n}}static parsePath(e,t){const n=[];if(t<e.length&&":"!==e[t])for(;;){if("["===e[t]){const{index:r,alias:s}=q.parseAlias(e,t+1);t=r+1,n.push(s)}else{const r=t;for(;t<e.length&&":"!==e[t]&&"."!==e[t];)++t;const s=e.slice(r,t).trim();if(!s)throw new Error("Invalid parameter path");n.push(s)}if(t>=e.length||":"===e[t])break;if("."!==e[t])throw new Error("Invalid alias expression");++t}return Object.freeze(n),{index:t,segments:n}}static parse(e){let t=U.get(e);if(!t){if(t=H.get(e),!t){const{segments:n}=q.parsePath(e,0);t=new q(n),t.toString()!==e&&U.set(t.toString(),t)}U.set(e,t)}return t}get length(){return this.segments.length}toString(){return this._string}slice(e=0,t=this.segments.length){let n;if(e<0&&(e=Math.max(0,this.segments.length+e)),t<0&&(t=Math.max(0,this.segments.length+t)),e>=t)n="";else{const r=e>0?this._stringIndex[e-1]+1:0,s=t<=this.segments.length?this._stringIndex[t-1]:this._string.length;n=this._string.slice(r,s)}let r=U.get(n);if(!r){if(r=H.get(n),!r){const n=this.segments.slice(e,t);Object.freeze(n),r=new q(n)}U.set(n,r)}return r}concat(e){if(!e._string)return this;if(!this._string)return e;const t=`${this._string}.${e._string}`;let n=U.get(t);if(!n){if(n=H.get(t),!n){const t=this.segments.concat(e.segments);Object.freeze(t),n=new q(t)}U.set(t,n)}return n}stripAlias(){if(!this.alias)return this;const e=this.segments.map(e=>Array.isArray(e)?"*":e),t=e.join(".");let n=U.get(t);return n||(n=H.get(t),n||(Object.freeze(e),n=new q(e)),U.set(t,n)),n}}const F=setInterval(()=>{H=U,U=new Map},12e4);let B,W,J,z,G,V,Z,K,X,Y,Q,ee,te,ne,re,se,ae,ie,oe;function le(e,t){if(e.length!==t.length)return!1;for(const[n,r]of e.entries())if(r!==t[n])return!1;return!0}async function ce(){ie=r.MongoClient.connect(""+k("MONGODB_CONNECTION_URL"),{useNewUrlParser:!0,useUnifiedTopology:!0}),oe=await ie;const e=oe.db();B=e.collection("tasks"),await B.createIndex({device:1,timestamp:1}),console.log("database is connected"),W=e.collection("devices"),J=e.collection("presets"),z=e.collection("objects"),K=e.collection("fs.files"),G=e.collection("provisions"),V=e.collection("virtualParameters"),Z=e.collection("faults"),X=e.collection("operations"),Y=e.collection("permissions"),Q=e.collection("users"),ee=e.collection("config"),te=e.collection("manufacturers"),ne=e.collection("models"),re=e.collection("groups"),se=e.collection("log"),ae=e.collection("parameterTasks"),se.insertOne({createdAt:new Date}).then(e=>{se.indexExists("createdAt").then(e=>{if(!e){let e;e={expireAfterSeconds:63072e3},se.createIndex({createdAt:1},e)}}).catch(e=>{console.log(e)})}).catch(e=>{console.log(e)})}async function ue(){ie&&await(await ie).close()}async function de(){return J.find().toArray()}async function pe(){return z.find().toArray()}async function fe(){return G.find().toArray()}async function me(){return V.find().toArray()}function he(){return K.find().toArray()}async function ge(){return(await ee.find().toArray()).map(e=>({id:e._id,value:j(e.value)}))}async function we(){return Y.find().toArray()}async function _e(){return Q.find().toArray()}F.unref&&F.unref();const ye=Object.freeze({__proto__:null,get tasksCollection(){return B},get devicesCollection(){return W},get presetsCollection(){return J},get objectsCollection(){return z},get provisionsCollection(){return G},get virtualParametersCollection(){return V},get faultsCollection(){return Z},get filesCollection(){return K},get operationsCollection(){return X},get permissionsCollection(){return Y},get usersCollection(){return Q},get configCollection(){return ee},get manufacturersCollection(){return te},get modelsCollection(){return ne},get groupsCollection(){return re},get logCollection(){return se},get parameterTasksCollection(){return ae},get client(){return oe},connect:ce,disconnect:ue,fetchDevice:async function(e,t){const n=[[q.parse("Events"),t,{object:[t,1],writable:[t,0]}],[q.parse("DeviceID"),t,{object:[t,1],writable:[t,0]}]],r=await W.findOne({_id:e});if(!r)return null;for(const[e,s]of Object.entries(r))switch(e){case"_lastInform":n.push([q.parse("Events.Inform"),+s,{object:[+s,0],writable:[+s,0],value:[+s,[+s,"xsd:dateTime"]]}]);break;case"_lastBoot":n.push([q.parse("Events.1_BOOT"),+s,{object:[+s,0],writable:[+s,0],value:[+s,[+s,"xsd:dateTime"]]}]);break;case"_lastBootstrap":n.push([q.parse("Events.0_BOOTSTRAP"),+s,{object:[+s,0],writable:[+s,0],value:[+s,[+s,"xsd:dateTime"]]}]);break;case"_registered":n.push([q.parse("Events.Registered"),t,{object:[t,0],writable:[t,0],value:[t,[+s,"xsd:dateTime"]]}]);break;case"_id":n.push([q.parse("DeviceID.ID"),t,{object:[t,0],writable:[t,0],value:[t,[s,"xsd:string"]]}]);break;case"_tags":s.length&&n.push([q.parse("Tags"),t,{object:[t,1],writable:[t,0]}]);for(let e of s)e=e.replace(/[^a-zA-Z0-9-]+/g,"_"),n.push([q.parse("Tags."+e),t,{object:[t,0],writable:[t,1],value:[t,[!0,"xsd:boolean"]]}]);break;case"_deviceId":null!=s._Manufacturer&&n.push([q.parse("DeviceID.Manufacturer"),t,{object:[t,0],writable:[t,0],value:[t,[s._Manufacturer,"xsd:string"]]}]),null!=s._OUI&&n.push([q.parse("DeviceID.OUI"),t,{object:[t,0],writable:[t,0],value:[t,[s._OUI,"xsd:string"]]}]),null!=s._ProductClass&&n.push([q.parse("DeviceID.ProductClass"),t,{object:[t,0],writable:[t,0],value:[t,[s._ProductClass,"xsd:string"]]}]),null!=s._SerialNumber&&n.push([q.parse("DeviceID.SerialNumber"),t,{object:[t,0],writable:[t,0],value:[t,[s._SerialNumber,"xsd:string"]]}])}return function e(t,r,s,a){t._timestamp&&(t._timestamp=+t._timestamp),t._attributesTimestamp&&(t._attributesTimestamp=+t._attributesTimestamp);const i={};let o=t._timestamp||1;a>o&&(o=a),null!=t._value&&(i.value=[t._timestamp||1,[t._value,t._type]],"xsd:dateTime"===t._type&&(i.value[1][0]=+i.value[1][0]),t._object=!1),null!=t._writable&&(i.writable=[a||1,t._writable?1:0]),null!=t._object&&(i.object=[o,t._object?1:0]),null!=t._notification&&(i.notification=[t._attributesTimestamp||1,t._notification]),null!=t._accessList&&(i.accessList=[t._attributesTimestamp||1,t._accessList]),n.push([q.parse(r.slice(0,-1)),o,i]);for(const[n,a]of Object.entries(t))n.startsWith("_")||(t._object=!0,e(a,r+n+".",s+1,t._timestamp));!t._object&&s||!t._timestamp||n.push([q.parse(r+"*"),t._timestamp])}(r,"",0,0),n},saveDevice:async function(e,t,n,r){const s={$set:{},$unset:{},$addToSet:{},$pull:{}};for(const e of t.timestamps.diff()){if(e[0].wildcard!==1<<e[0].length-1)continue;if("Events"===e[0].segments[0]||"DeviceID"===e[0].segments[0]||"Tags"===e[0].segments[0])continue;const n=t.paths.get(e[0].slice(0,-1));e[2]>r&&(e[2]=r),null==e[2]&&null!=e[1]?s.$unset[n.length?n.toString()+"._timestamp":"_timestamp"]=1:!n||n.length&&!t.attributes.has(n)||(s.$set[n.length?n.toString()+"._timestamp":"_timestamp"]=new Date(e[2]))}for(const e of t.attributes.diff()){const t=e[0],n=(((e[1]||{}).value||[])[1]||[])[0],a=(((e[2]||{}).value||[])[1]||[])[0],i=(((e[1]||{}).value||[])[1]||[])[1],o=(((e[2]||{}).value||[])[1]||[])[1],l=((e[1]||{}).value||[])[0],c=((e[2]||{}).value||[])[0],u=((e[1]||{}).object||[])[1],d=((e[2]||{}).object||[])[1],p=((e[2]||{}).writable||[])[1],f=((e[1]||{}).writable||[])[1],m=((e[1]||{}).notification||[])[0],h=((e[2]||{}).notification||[])[0],g=((e[1]||{}).notification||[])[1],w=((e[2]||{}).notification||[])[1],_=((e[1]||{}).accessList||[])[1],y=((e[2]||{}).accessList||[])[1];switch(t.segments[0]){case"Events":if(2===t.length&&a!==n)if(e[2]){const n=new Date(e[2].value[1][0]);switch(t.segments[1]){case"Inform":s.$set._lastInform=n;break;case"1_BOOT":s.$set._lastBoot=n;break;case"0_BOOTSTRAP":s.$set._lastBootstrap=n;break;case"Registered":s.$set._registered=n}}else switch(t.segments[1]){case"Inform":s.$unset._lastInform=1;break;case"1_BOOT":s.$unset._lastBoot=1;break;case"0_BOOTSTRAP":s.$unset._lastBootstrap=1;break;case"Registered":s.$unset._registered=1}break;case"DeviceID":if(a!==n){const n=e[2].value[1][0];switch(t.segments[1]){case"ID":s.$set._id=n;break;case"Manufacturer":s.$set["_deviceId._Manufacturer"]=n;break;case"OUI":s.$set["_deviceId._OUI"]=n;break;case"ProductClass":s.$set["_deviceId._ProductClass"]=n;break;case"SerialNumber":s.$set["_deviceId._SerialNumber"]=n;break;case"MACAddress":s.$set["_deviceId._MacAddress"]=n}}break;case"Tags":a!==n&&(null!=a?(s.$addToSet._tags||(s.$addToSet._tags={$each:[]}),s.$addToSet._tags.$each.push(t.segments[1])):(s.$pull._tags||(s.$pull._tags={$in:[]}),s.$pull._tags.$in.push(t.segments[1])));break;default:if(!e[2]){s.$unset[t.toString()]=1;continue}for(const O of Object.keys(e[2]))if(e[2][O][0]>r&&(e[2][O][0]=r),null!=e[2][O][1])switch(O){case"value":a!==n&&("xsd:dateTime"===o&&Number.isInteger(a)?s.$set[t.toString()+"._value"]=new Date(a):s.$set[t.toString()+"._value"]=a),o!==i&&(s.$set[t.toString()+"._type"]=o),c!==l&&(s.$set[t.toString()+"._timestamp"]=new Date(c));break;case"object":e[1]&&e[1].object&&d===u||(s.$set[t.length?t.toString()+"._object":"_object"]=!!d);break;case"writable":e[1]&&e[1].writable&&p===f||(s.$set[t.length?t.toString()+"._writable":"_writable"]=!!p);break;case"notification":e[1]&&e[1].notification&&w===g||(s.$set[t.length?t.toString()+"._notification":"_notification"]=w),h!==m&&(s.$set[t.toString()+"._attributesTimestamp"]=new Date(h));break;case"accessList":e[1]&&e[1].accessList&&le(y,_)||(s.$set[t.length?t.toString()+"._accessList":"_accessList"]=y),h!==m&&(s.$set[t.toString()+"._attributesTimestamp"]=new Date(h))}if(e[1])for(const n of Object.keys(e[1]))if(!(null==e[1][n][1]||e[2]&&e[2][n]&&null!=e[2][n][1])){const e=t.length?t.toString()+".":"";s.$unset[`${e}_${n}`]=1,"value"===n?(s.$unset[e+"_type"]=1,s.$unset[e+"_timestamp"]=1):"notification"===n?null==y&&(s.$unset[e+"_attributesTimestamp"]=1):"accessList"===n&&null==w&&(s.$unset[e+"_attributesTimestamp"]=1)}}}s.$unset=function(e){if(e[""])return{"":e[""]};const t=Object.keys(e).sort();if(t.length<=1)return e;for(let n=1;n<t.length;++n){const r=t[n-1],s=t[n];s.startsWith(r)&&("."!==s.charAt(r.length)&&"."!==s.charAt(r.length-1)||(delete e[s],t.splice(n--,1)))}return e}(s.$unset);for(const e of Object.keys(s.$unset))null!=s.$set[e]&&delete s.$unset[e];for(const[e,t]of Object.entries(s)){if("$addToSet"===e)for(const[e,n]of Object.entries(t))n.$each.length||delete t[e];else if("$pull"===e)for(const[e,n]of Object.entries(t))n.$in.length||delete t[e];Object.keys(t).length||delete s[e]}if(!Object.keys(s).length)return;let a;if(s.$addToSet&&s.$pull&&(a={$pull:s.$pull},delete s.$pull),1!==(await W.updateOne({_id:e},s,{upsert:n})).result.n)throw new Error(`Device ${e} not found in database`);a&&await W.updateOne({_id:e},a)},getFaults:async function(e){const t=await Z.find({_id:{$regex:`^${L(e)}\\:`}}).toArray(),n={};for(const r of t){const t=r._id.slice(e.length+1);delete r._id,delete r.channel,delete r.device,r.timestamp=+r.timestamp,r.provisions=JSON.parse(r.provisions),n[t]=r}return n},saveFault:async function(e,t,n){const r=`${e}:${t}`,s=Object.assign({},n);s._id=r,s.device=e,s.channel=t,s.timestamp=new Date(n.timestamp),s.provisions=JSON.stringify(n.provisions),await Z.replaceOne({_id:r},s,{upsert:!0})},deleteFault:async function(e,t){await Z.deleteOne({_id:`${e}:${t}`})},getDueTasks:async function(e,t){const n=B.find({device:e}).sort({timestamp:1}),s=[];for await(const e of n){if(e.timestamp&&(e.timestamp=+e.timestamp),e.expiry&&(e.expiry=+e.expiry),e.timestamp>=t)return[s,+e.timestamp];if(e._id=String(e._id),s.push(e),"download"===e.name&&e.file){let t;t=r.ObjectID.isValid(e.file)?{_id:{$in:[e.file,new r.ObjectID(e.file)]}}:{_id:e.file};const n=await K.find(t).toArray();n[0]&&(e.fileType||(e.fileType=n[0].metadata.fileType),e.fileName||(e.fileName=n[0].filename||n[0]._id.toString()))}}return[s,null]},clearTasks:async function(e,t){await B.deleteMany({_id:{$in:t.map(e=>new r.ObjectID(e))}})},getOperations:async function(e){const t=await X.find({_id:{$regex:`^${L(e)}\\:`}}).toArray(),n={};for(const r of t){const t=r._id.slice(e.length+1);delete r._id,"string"==typeof r.provisions?(r.timestamp=+r.timestamp,r.args&&(r.args=JSON.parse(r.args)),r.provisions=JSON.parse(r.provisions),r.retries=JSON.parse(r.retries),n[t]=r):n[t]=r}return n},saveOperation:async function(e,t,n){const r=`${e}:${t}`,s=Object.assign({},n);s._id=r,s.timestamp=new Date(n.timestamp),s.provisions=JSON.stringify(n.provisions),s.retries=JSON.stringify(n.retries),s.args=JSON.stringify(n.args),await X.replaceOne({_id:r},s,{upsert:!0})},deleteOperation:async function(e,t){await X.deleteOne({_id:`${e}:${t}`})},getPresets:de,getObjects:pe,getProvisions:fe,getVirtualParameters:me,getFiles:he,getConfig:ge,getPermissions:we,getUsers:_e}),Oe=""+k("FORWARDED_HEADER"),Ee=new WeakMap,Se=[];for(const e of Oe.split(",").map(e=>e.trim()))try{Se.push(a.parseCIDR(e))}catch(t){try{const t=a.parse(e);Se.push([t,8*t.toByteArray().length])}catch(e){}}function Te(e){let t=Ee.get(e);if(!t){const n=e.socket;t={localAddress:n.localAddress,localPort:n.localPort,remoteAddress:n.remoteAddress,remotePort:n.remotePort,host:e.headers.host,encrypted:!!e.socket.encrypted};const r=e.headers.forwarded;if(r){const e=a.parse(n.remoteAddress);if(Se.some(t=>e.match(t))){const e=function(e){e=e.toLowerCase();const t={};let n,r=0,s=-1;for(let a=0;a<e.length;++a){const i=e.charCodeAt(a);if(61===i)r>=0&&(n=e.slice(r,a).trim(),r=-1,s=a+1);else if(59===i)s>=0&&(t[n]=e.slice(s,a).trim()),s=-1,r=a+1;else{if(44===i)return s>=0&&(t[n]=e.slice(s,a).trim()),t;if(34===i&&s>=0){const i=a;if(!e.slice(s,i).trim())for(a+=1;a<e.length;++a){const o=e.charCodeAt(a);if(92===o&&++a,34===o){t[n]=JSON.parse(e.slice(i,a+1).trim()),s=-1,r=a+1;break}}}}}return s>=0&&(t[n]=e.slice(s).trim()),t}(r);if("https"===e.proto?(t.encrypted=!0,t.localPort=443):"http"===e.proto&&(t.encrypted=!1,t.localPort=80),e.host){t.host=e.host;const[,n]=e.host.split(":",2);t.localPort=+n||t.localPort}if(e.for)if(e.for.startsWith("[")){const n=e.for.lastIndexOf("]");n>=0&&(t.remoteAddress=e.for.slice(1,n),t.remotePort=parseInt(e.for.slice(n+2))||t.remotePort)}else{const n=e.for.lastIndexOf(":");n>=0?(t.remoteAddress=e.for.slice(0,n),t.remotePort=parseInt(e.for.slice(n+1))||t.remotePort):t.remoteAddress=e.for}if(e.by)if(e.by.startsWith("[")){const n=e.by.lastIndexOf("]");n>=0&&(t.localAddress=e.by.slice(1,n),t.localPort=parseInt(e.by.slice(n+2))||t.localPort)}else{const n=e.by.lastIndexOf(":");n>=0?(t.localAddress=e.by.slice(0,n),t.localPort=parseInt(e.by.slice(n+1))||t.localPort):t.localAddress=e.by}}}Ee.set(e,t)}return t}const ve=k("LOG_FORMAT"),Ae=k("ACCESS_LOG_FORMAT")||ve,be={};let Ne,Ie,$e=!1,Ce=!1,xe=t.createWriteStream(null,{fd:process.stderr.fd}),De=t.fstatSync(xe.fd),ke=t.createWriteStream(null,{fd:process.stdout.fd}),Le=t.fstatSync(ke.fd);function Pe(){let e=1;Ne&&(++e,t.stat(Ne,(n,r)=>{if(n&&!n.message.startsWith("ENOENT:"))throw n;r&&r.dev===De.dev&&r.ino===De.ino||(xe.end(),xe=t.createWriteStream(null,{fd:t.openSync(Ne,"a")}),De=t.fstatSync(xe.fd)),0==--e&&setTimeout(Pe,6e4-Date.now()%6e4).unref()})),Ie&&(++e,t.stat(Ie,(n,r)=>{if(n&&!n.message.startsWith("ENOENT:"))throw n;r&&r.dev===Le.dev&&r.ino===Le.ino||(ke.end(),ke=t.createWriteStream(null,{fd:t.openSync(Ie,"a")}),Le=t.fstatSync(ke.fd)),0==--e&&setTimeout(Pe,6e4-Date.now()%6e4).unref()})),0==--e&&setTimeout(Pe,6e4-Date.now()%6e4).unref()}function Re(e){if(e.sessionContext){const t=e.sessionContext;e.deviceId=t.deviceId,e.remoteAddress=Te(t.httpRequest).remoteAddress,delete e.sessionContext}if(e.exception){const t=e.exception;e.exceptionName=t.name,e.exceptionMessage=t.message,e.exceptionStack=t.stack,delete e.exception}if(e.task&&(e.taskId=e.task._id,delete e.task),e.rpc){const t=e.rpc;t.acsRequest?(e.acsRequestId=t.id,e.acsRequestName=t.acsRequest.name,t.acsRequest.commandKey&&(e.acsRequestCommandKey=t.acsRequest.commandKey)):t.cpeRequest?(e.cpeRequestId=t.id,"Inform"===t.cpeRequest.name?(e.informEvent=t.cpeRequest.event.join(","),e.informRetryCount=t.cpeRequest.retryCount):(e.cpeRequestName=t.cpeRequest.name,t.cpeRequest.commandKey&&(e.cpeRequestCommandKey=t.cpeRequest.commandKey))):t.cpeFault&&(e.acsRequestId=t.id,e.cpeFaultCode=t.cpeFault.detail.faultCode,e.cpeFaultString=t.cpeFault.detail.faultString),delete e.rpc}if(e.fault){const t=e.fault;e.faultCode=t.code,e.faultMessage=t.message,delete e.fault}e.context&&(e.remoteAddress=Te(e.context.req).remoteAddress,e.context.state.user&&(e.user=e.context.state.user.username),delete e.context),e.userInfo&&(e.remoteAddress=e.userInfo.remoteAddress,e.userInfo.username&&(e.user=e.userInfo.username),delete e.userInfo);for(const[t,n]of Object.entries(e))null==n&&delete e[t];return e}function Me(e,t){if(t){let t="";return"info"===e.severity?t="<6>":"warn"===e.severity?t="<4>":"error"===e.severity&&(t="<3>"),`${t}${JSON.stringify(Re(e))}${n.EOL}`}return`${JSON.stringify(Re(e))}${n.EOL}`}function je(e,t){const r={user:!0,remoteAddress:!0,severity:!0,timestamp:!0,message:!0,deviceId:!!e.sessionContext};Re(e);let s="";e.remoteAddress&&(s=e.deviceId&&r.deviceId?`${e.remoteAddress} ${e.deviceId}: `:e.user?`${e.user}@${e.remoteAddress}: `:e.remoteAddress+": ");const a=Object.keys(e);let i="";const o=[];for(const t of a)r[t]||o.push(`${t}=${JSON.stringify(e[t])}`);if(o.length&&(i="; "+o.join(" ")),t){let t="";return"info"===e.severity?t="<6>":"warn"===e.severity?t="<4>":"error"===e.severity&&(t="<3>"),`${t}${s}${e.message}${i}${n.EOL}`}return`${e.timestamp} [${e.severity.toUpperCase()}] ${s}${e.message}${i}${n.EOL}`}function Ue(e){if(e.timestamp=(new Date).toISOString(),"json"===ve){let t=Me(e=Object.assign({},be,e),$e);xe.write(t)}else xe.write(je(e,$e))}function He(e){e.severity="info",Ue(e)}function qe(e){e.severity="error",Ue(e)}function Fe(e){if(e.timestamp=(new Date).toISOString(),"json"===Ae){Object.assign(e,be);let t=Me(e,Ce);ke.write(t);try{t=JSON.parse(t),t.createdAt=new Date,se.insertOne(t)}catch(e){console.log(e)}}else ke.write(je(e,Ce))}let Be=0,We=[];function Je(){const e=O.default.fork();return e.on("error",t=>{if("EPIPE"!==t.code)throw t;setTimeout(()=>{if(!e.isDead())throw t},50)}),e}function ze(e,t,n){const r={message:"Worker died",pid:e.process.pid,exitCode:null,signal:null};null!=t&&(r.exitCode=t),null!=n&&(r.signal=n),qe(r);const s=Date.now();We.push(s);let a=0,i=0,o=0;if(We=We.filter(e=>{if(e>s-6e4)++a;else if(e>s-12e4)++i;else{if(!(e>s-18e4))return!1;++o}return!0}),a>5&&i>5&&o>5){process.exitCode=1,O.default.removeListener("exit",ze);for(const e in O.default.workers)O.default.workers[e].kill();qe({message:"Too many crashes, exiting",pid:process.pid})}else Be=Math.max(s,Be+2e3),Be!==s?setTimeout(()=>{process.exitCode||Je()},Be-s):Je()}function Ge(){O.default.removeListener("exit",ze);for(const e in O.default.workers)O.default.workers[e].kill()}const Ve=O.default.worker;let Ze,Ke;function Xe(){return new Promise((e,t)=>{var n,r;setTimeout(()=>{t(new Error("Could not close server in a timely manner"))},3e4).unref(),n=2e4,r=e,Ze?(setTimeout(()=>{if(!r)return;Ze.removeListener("request",Ke),Ze.setTimeout(1);const e=r;r=null,setTimeout(e,1e3)},n).unref(),Ze.close(()=>{if(!r)return;const e=r;r=null,setTimeout(e,50)})):r()})}function Ye(e){return"[object Object]"===Object.prototype.toString.call(e)}function Qe(e){if("string"==typeof e){const t=[e],n=/^\/(.*?)\/(g?i?m?y?)$/.exec(e);n&&t.push({$regex:new RegExp(n[1],n[2])}),+e===parseFloat(e)&&t.push(+e);const r=new Date(e);e.length>=8&&r.getFullYear()>1983&&t.push(r);const s=function(e,t){if(-1===e.indexOf("*"))return!1;let n=e.replace(/[[\]\\^$.|?+()]/,"\\$&");return n="*"===n[0]?n.replace(/^\*+/g,""):"^"+n,"*"===n[n.length-1]?n=n.replace(/\*+$/g,""):n+="$",n=n.replace(/[*]/,".*"),new RegExp(n,t)}(e);return!1!==s&&t.push({$regex:s}),t}return e}function et(e,t){const n=[],r=function e(t){if(Array.isArray(t)){let n=[];for(const r of t)n=n.concat(e(r));return[n]}if(!Ye(t)){const e=Qe(t);return Array.isArray(e)?e:[e]}const n=[],r=[],s=[],a=[];for(const[n,i]of Object.entries(t))s.push(n),a.push(e(i)),r.push(0);let i=0;for(;i<r.length;){const e={};for(let t=0;t<s.length;++t)e[s[t]]=a[t][r[t]];for(n.push(e),i=0;i<r.length&&(r[i]+=1,!(r[i]<a[i].length));++i)r[i]=0}return n}(t);"_"!==e[e.lastIndexOf(".")+1]&&(e+="._value");for(const t of r){const r={};r[e]=t,n.push(r)}return n}function tt(e,t){for(const[n,r]of Object.entries(e))if("$"===n[0])for(const e of r)tt(e,t);else if(n in t)if(Ye(r))for(const[e,s]of Object.entries(r))switch(e){case"$in":case"$nin":for(let e=0;e<s.length;++e)s[e]=t[n](s[e]);break;case"$eq":case"$gt":case"$gte":case"$lt":case"$lte":case"$ne":r[e]=t[n](s);break;case"$exists":case"$type":break;default:throw new Error("Operator not supported")}else e[n]=t[n](e[n]);return e}const nt=+k("MAX_CACHE_TTL");let rt,st,at=0;async function it(){const e=""+k("MONGODB_CONNECTION_URL");rt=r.MongoClient.connect(e,{useNewUrlParser:!0,useUnifiedTopology:!0});const t=(await rt).db();st=t.collection("cache"),await st.createIndex({expire:1},{expireAfterSeconds:0});const n=Date.now(),s=await t.command({hostInfo:1});at=s.system.currentTime.getTime()-n}async function ot(){rt&&await(await rt).close()}async function lt(e){Array.isArray(e)?await st.deleteMany({_id:{$in:e}}):await st.deleteOne({_id:e})}const ct=Array.isArray,ut=new WeakMap,dt={};function pt(e,t){let n=!0;for(;n;){n=!1;for(let r=2;r<e.length;++r){const s=t(e[r-1],e[r],r-2);s!==dt&&(n=!0,(e=e.slice()).splice(r-1,2,s))}}return 2===e.length?e[1]:e}function ft(e,t="",n=""){const r={"-":"\\-","/":"\\/","\\":"\\/","^":"\\^",$:"\\$","*":"\\*","+":"\\+","?":"\\?",".":"\\.","(":"\\(",")":"\\)","|":"\\|","[":"\\[","]":"\\]","{":"\\{","}":"\\}","\\%":".*","\\_":"."};let s=function(e,t){const n=e.split("");for(let e=0;e<n.length;++e){const r=n[e];if(r===t)n[e]=n[e+1]||"",n[e+1]="";else if("_"===r)n[e]="\\_";else if("%"===r)for(n[e]="\\%";"%"===n[e+1];)n[++e]=""}return n.filter(e=>e)}(e,t);if(!s.length)return new RegExp("^$",n);s=s.map(e=>r[e]||e),s[0]=".*"===s[0]?"":"^"+s[0];const a=s.length-1;return s[a]=[".*",""].includes(s[a])?"":s[a]+"$",new RegExp(s.join(""),n)}function mt(e,t){return"boolean"==typeof e&&(e=+e),"boolean"==typeof t&&(t=+t),typeof e!=typeof t?"string"==typeof e?1:-1:e>t?1:e<t?-1:0}function ht(e){switch(typeof e){case"number":return e;case"boolean":return+e;case"string":return parseFloat(e)||0}}function gt(e){switch(typeof e){case"string":return e;case"number":return e.toString();case"boolean":return(+e).toString()}}function wt(e){if(!Array.isArray(e))return e;if("CASE"===e[0]){for(let t=1;t<e.length;t+=2){if(Array.isArray(e[t]))return e;if(e[t])return e[t+1]}return null}if("FUNC"===e[0]){if("COALESCE"===e[1]){const t=[];for(let n=2;n<e.length;++n){const r=e[n];if(null!=r&&(t.push(r),!Array.isArray(r)))break}return t.length?1===t.length?t[0]:["FUNC","COALESCE",...t]:null}if("UPPER"===e[1]){if(null==e[2])return null;if(!ct(e[2]))return gt(e[2]).toUpperCase()}else if("LOWER"===e[1]){if(null==e[2])return null;if(!ct(e[2]))return gt(e[2]).toLowerCase()}}else if("PARAM"===e[0]){if(null==e[1])return null}else{if("AND"===e[0]){for(let t=1;t<e.length;++t)if(!Array.isArray(e[t])&&null!=e[t]&&!e[t])return!1;const t=[];for(let n=1;n<e.length;++n){const r=e[n];if(null==r)return null;Array.isArray(r)&&("AND"===r[0]?t.push(...r.slice(1)):t.push(r))}return!t.length||(1===t.length&&t.push(!0),["AND",...t])}if("OR"===e[0]){const t=[];for(let n=1;n<e.length;++n){const r=e[n];if(Array.isArray(r))"OR"===r[0]?t.push(...r.slice(1)):t.push(r);else if(r)return!0}return t.length?(1===t.length&&t.push(!1),["OR",...t]):!!e.some(e=>null==e)&&null}if("NOT"===e[0]){if(null==e[1])return null;if(!ct(e[1]))return!e[1];if("NOT"===e[1][0])return e[1][1]}else{if("IS NULL"===e[0])return ct(e[1])?e:null==e[1]||null;if("IS NOT NULL"===e[0])return ct(e[1])?e:null!=e[1]||null;if("LIKE"===e[0]){if(ct(e[1])||ct(e[2])||ct(e[3]))return e;if(null==e[1]||null==e[2]||e.length>=4&&null==e[3])return null;let t=ut.get(e);return t||(t=ft(e[2],e[3]),ut.set(e,t)),t.test(e[1])}if("NOT LIKE"===e[0]){if(ct(e[1])||ct(e[2])||ct(e[3]))return e;if(null==e[1]||null==e[2]||e.length>=4&&null==e[3])return null;let t=ut.get(e);return t||(t=ft(e[2],e[3]),ut.set(e,t)),!t.test(e[1])}if("="===e[0])return null==e[1]||null==e[2]?null:ct(e[1])||ct(e[2])?e:0===mt(e[1],e[2]);if("<>"===e[0])return null==e[1]||null==e[2]?null:ct(e[1])||ct(e[2])?e:0!==mt(e[1],e[2]);if(">"===e[0])return null==e[1]||null==e[2]?null:ct(e[1])||ct(e[2])?e:mt(e[1],e[2])>0;if(">="===e[0])return null==e[1]||null==e[2]?null:ct(e[1])||ct(e[2])?e:mt(e[1],e[2])>=0;if("<"===e[0])return null==e[1]||null==e[2]?null:ct(e[1])||ct(e[2])?e:mt(e[1],e[2])<0;if("<="===e[0])return null==e[1]||null==e[2]?null:ct(e[1])||ct(e[2])?e:mt(e[1],e[2])<=0;if("*"===e[0])return pt(e,(e,t)=>null==e||null==t?null:ct(e)||ct(t)?dt:ht(e)*ht(t));if("/"===e[0])return pt(e,(e,t,n)=>null==e||null==t?null:ct(e)||ct(t)?dt:0===n?ht(e)/ht(t):ht(e)*ht(t));if("+"===e[0])return pt(e,(e,t)=>null==e||null==t?null:ct(e)||ct(t)?dt:ht(e)+ht(t));if("-"===e[0])return pt(e,(e,t,n)=>null==e||null==t?null:ct(e)||ct(t)?dt:0===n?ht(e)-ht(t):ht(e)+ht(t));if("||"===e[0])return pt(e,(e,t)=>null==e||null==t?null:ct(e)||ct(t)?dt:gt(e)+gt(t))}}return e}function _t(e,t,n,r){return function e(t,n){if(!Array.isArray(t))return n(t);let r;for(let s=1;s<t.length;++s){const a=e(t[s],n);a!==t[s]&&(r=r||t.slice(),r[s]=a)}return n(r||t)}(e,e=>{if(r&&(e=r(e)),!ct(e))return e;if("FUNC"===e[0]&&"NOW"===e[1]){if(n)return n}else if("PARAM"===e[0]){if(null==e[1])return null;if(t&&!ct(e[1])){let n;return n="function"==typeof t?t(e[1]):t[e[1]],null==n?null:("object"==typeof n&&(n=n.value?n.value[0]:null),n)}}return wt(e)})}async function yt(e,t,n,r){return async function e(t,n){if(!Array.isArray(t))return n(t);let r;for(let s=1;s<t.length;++s){const a=await e(t[s],n);a!==t[s]&&(r=r||t.slice(),r[s]=a)}return n(r||t)}(e,async e=>{if(r&&(e=await r(e)),!ct(e))return e;if("FUNC"===e[0]){if("NOW"===e[1]){if(n)return n}else if("UPPER"===e[1]){if(null==e[2])return null;if(!ct(e[2]))return(""+e[2]).toUpperCase()}else if("LOWER"===e[1]){if(null==e[2])return null;if(!ct(e[2]))return(""+e[2]).toLowerCase()}}else if("PARAM"===e[0]){if(null==e[1])return null;if(t&&!ct(e[1])){let n=t[e[1]];return null==n?null:("object"==typeof n&&(n=n.value?n.value[0]:null),n)}}return wt(e)})}const Ot=Array.isArray;function Et(e){const t=+e;return isNaN(t)?""+e:t}function St(e){const t=e.trim().split(/\s+/);return 5===t.length&&t.unshift("*"),f.schedule(f.parse.cron(t.join(" "),!0))}const Tt=new Map;let vt=null,At=1;async function bt(){const e=await de();let t=await pe();t=t.map(e=>((e=function e(t,n="",r={}){for(const s of Object.keys(t)){const a=t[s];"object"!=typeof a||Array.isArray(a)?r[`${n}${s}`]=a:e(a,`${n}${s}.`,r)}return r}(e))._keys&&e._keys.length||(e._keys=Object.keys(e).filter(e=>!e.startsWith("_"))),e)),e.sort((e,t)=>e.weight===t.weight?e._id>t._id?1:e._id<t._id?-1:0:e.weight-t.weight);const n=[];for(const a of e){let e=null;if(a.schedule){const t=a.schedule.trim().split(/\s+/);e={md5:p.createHash("md5").update(a.schedule).digest("hex"),duration:null,schedule:null};try{e.duration=1e3*+t.shift(),e.schedule=St(t.join(" "))}catch(t){(s={message:"Invalid preset schedule",preset:a._id,schedule:a.schedule}).severity="warn",Ue(s),e.schedule=!1}}const i=a.events||{};let o=!0;if(a.precondition){try{o=j(a.precondition)}catch(e){r=JSON.parse(a.precondition),o=!Object.keys(r).length||function e(t){const n=[];for(const[r,s]of Object.entries(t))if("$"===r[0])if("$and"===r){const t=["AND"];for(const n of Object.values(s))t.push(e(n));n.push(t)}else{if("$or"!==r)throw new Error(`Operator ${r} not supported`);{const t=["OR"];for(const n of Object.values(s))t.push(e(n));n.push(t)}}else if("_tags"===r)if("object"==typeof s){if(Ot(s))throw new Error("Invalid type");const e=[];for(const[t,n]of Object.entries(s))if("$ne"===t){if("string"!=typeof s.$ne)throw new Error("Only string values are allowed for _tags");e.push(["IS NULL",["PARAM","Tags."+n]])}else{if("$eq"!==t)throw new Error("Invalid tag query");if("string"!=typeof s.$eq)throw new Error("Only string values are allowed for _tags");e.push(["IS NOT NULL",["PARAM","Tags."+n]])}1===e.length?n.push(e[0]):e.length>1&&n.push(["AND",...e])}else n.push(["IS NOT NULL",["PARAM","Tags."+s]]);else if(r.startsWith("Tags.")){let e;if("boolean"==typeof s)e=s;else if(s.hasOwnProperty("$eq"))e=!!s.$eq;else if(s.hasOwnProperty("$ne"))e=!s.$ne;else{if(!s.hasOwnProperty("$exists"))throw new Error("Invalid tag query");e=!!s.$exists}n.push([e?"IS NOT NULL":"IS NULL",["PARAM",r]])}else if("object"==typeof s){if(Ot(s))throw new Error("Invalid type");const e=[];for(const[t,n]of Object.entries(s)){if("$eq"===t)e.push(["=",["PARAM",r],n]);else if("$ne"===t)e.push(["OR",["<>",["PARAM",r],n],["IS NULL",["PARAM",r]]]);else if("$lt"===t)e.push(["<",["PARAM",r],n]);else if("$lte"===t)e.push(["<=",["PARAM",r],n]);else if("$gt"===t)e.push([">",["PARAM",r],n]);else{if("$gte"!==t)throw new Error(`Operator ${t} not supported`);e.push([">=",["PARAM",r],n])}if(!["string","number","boolean"].includes(typeof n))throw new Error(`Invalid value for ${t} operator`)}if(1===e.length)n.push(e[0]);else if(e.length>1){const t=["AND"];n.push(t.concat(e))}}else n.push(["=",["PARAM",r],s]);return 1===n.length?n[0]:0===n.length||["AND",...n]}(r)}o=_t(o)}const l=a.provisions||[];for(const e of a.configurations)switch(e.type){case"age":l.push(["refresh",e.name,+e.age]);break;case"value":l.push(["value",e.name,e.value]);break;case"add_tag":l.push(["tag",e.tag,!0]);break;case"delete_tag":l.push(["tag",e.tag,!1]);break;case"provision":l.push([e.name].concat(e.args||[]));break;case"add_object":for(const n of t)if(n._id===e.object){const t=n._keys.map(e=>`${e}:${JSON.stringify(n[e])}`).join(","),r=`${e.name}.[${t}]`;l.push(["instances",r,1]);for(const e in n)e.startsWith("_")||-1!==n._keys.indexOf(e)||l.push(["value",`${r}.${e}`,n[e]])}break;case"delete_object":for(const n of t)if(n._id===e.object){const t=n._keys.map(e=>`${e}:${JSON.stringify(n[e])}`).join(","),r=`${e.name}.[${t}]`;l.push(["instances",r,0])}break;default:throw new Error("Unknown configuration type "+e.type)}n.push({name:a._id,channel:a.channel||"default",schedule:e,events:i,precondition:o,provisions:l})}var r,s;return n}async function Nt(){const e=await fe(),t={};for(const n of e)t[n._id]={},t[n._id].md5=p.createHash("md5").update(n.script).digest("hex"),t[n._id].script=new d.Script(`"use strict";(function(){\n${n.script}\n})();`,{filename:n._id,lineOffset:-1,timeout:50});return t}async function It(){const e=await me(),t={};for(const n of e)t[n._id]={},t[n._id].md5=p.createHash("md5").update(n.script).digest("hex"),t[n._id].script=new d.Script(`"use strict";(function(){\n${n.script}\n})();`,{filename:n._id,lineOffset:-1,timeout:50});return t}async function $t(){const e=await we(),t={};for(const n of e)t[n.role]||(t[n.role]={}),t[n.role][n.access]||(t[n.role][n.access]={}),t[n.role][n.access][n.resource]={access:n.access,filter:j(n.filter||"true")},n.validate&&(t[n.role][n.access][n.resource].validate=j(n.validate));return t}async function Ct(){const e=await he(),t={};for(const n of e){const e=n.filename||n._id.toString();t[e]={},t[e].length=n.length,t[e].md5=n.md5,t[e].contentType=n.contentType}return t}async function xt(){const e=await _e(),t={};for(const n of e)t[n._id]={password:n.password,salt:n.salt,roles:n.roles.split(",").map(e=>e.trim())};return t}async function Dt(){const e=await ge();e.sort((e,t)=>e.id>t.id?1:e.id<t.id?-1:0);const t={filters:{},device:{},index:{},overview:{}},n={};for(const r of e){const e=_t(r.value);if(n[r.id]=e,r.id.startsWith("ui.")){const n=r.id.split(".");n.shift();let s=t;for(;n.length>1;){const e=n.shift();"object"!=typeof s[e]&&(s[e]={}),s=s[e]}s[n[0]]=e}}return[n,t]}async function kt(){if(!At)return await new Promise(e=>setTimeout(e,20)),void await kt();At=0;const e=Date.now(),t=await async function(e){const t=new Date(Date.now()-at);if(Array.isArray(e)){const n=await st.find({_id:{$in:e}}).toArray(),r={};e.forEach((e,t)=>{r[e]=t});const s=[];return n.forEach(e=>{e.expire>t&&(s[r[e._id]]=e.value)}),s}{const n=await st.findOne({_id:{$in:[e]}});return n&&n.expire>t?n.value:null}}("presets_hash");if(vt&&t===vt)return void(At=e+(3e3-e%3e3));const n=await async function e(t,n){const r=Math.random().toString(36).slice(2),s=new Date(Date.now()-at),a=new Date(Date.now()-at+1e3*n);try{await st.updateOne({_id:t,expire:{$lte:s}},{$set:{value:r,expire:a}},{upsert:!0})}catch(r){if(r&&11e3===r.code)return await new Promise(e=>setTimeout(e,200)),e(t,n)}return async function(e){if(e){const n=new Date(Date.now()-at+1e3*e);if(1!==(await st.updateOne({_id:t,value:r},{expire:n})).result.n)throw new Error("Lock expired")}else if(1!==(await st.deleteOne({_id:t,value:r})).result.n)throw new Error("Lock expired")}}("presets_hash_lock",3),r=await Promise.all([bt(),Nt(),It(),Ct(),$t(),xt(),Dt()]),s={presets:r[0],provisions:r[1],virtualParameters:r[2],files:r[3],permissions:r[4],users:r[5],config:r[6][0],ui:r[6][1]};if(vt){const e=vt,t=Tt.get(e);setTimeout(()=>{Tt.get(e)===t&&Tt.delete(e)},6e4).unref()}vt=function(e){const t=p.createHash("md5");for(const n of e.presets)t.update(JSON.stringify(n.name)),t.update(JSON.stringify(n.channel)),t.update(JSON.stringify(n.schedule)),t.update(JSON.stringify(n.events)),t.update(JSON.stringify(n.precondition)),t.update(JSON.stringify(n.provisions));let n;n=Object.keys(e.provisions).sort(),t.update(JSON.stringify(n));for(const r of n)t.update(e.provisions[r].md5);n=Object.keys(e.virtualParameters).sort(),t.update(JSON.stringify(n));for(const r of n)t.update(e.virtualParameters[r].md5);n=Object.keys(e.config).sort(),t.update(JSON.stringify(n));for(const r of n)t.update(JSON.stringify(e.config[r]));n=Object.keys(e.files).sort(),t.update(JSON.stringify(n));for(const r of n)t.update(JSON.stringify(e.files[r]));n=Object.keys(e.users).sort(),t.update(JSON.stringify(n));for(const r of n)t.update(JSON.stringify(e.users[r]));const r=Object.keys(e.permissions).sort();t.update(JSON.stringify(r));for(const s of r){const r=Object.keys(e.permissions[s]).sort();t.update(JSON.stringify(r));for(const a of r){n=Object.keys(e.permissions[s][a]).sort(),t.update(JSON.stringify(n));for(const r of n)t.update(JSON.stringify(e.permissions[s][a][r]))}}return t.digest("hex")}(s),Tt.set(vt,s),await async function(e,t,n=nt){const r=new Date(Date.now()-at+1e3*n);await st.replaceOne({_id:e},{_id:e,value:t,expire:r},{upsert:!0})}("presets_hash",vt,300),await n(0),At=e+(3e3-e%3e3)}function Lt(e,t,n,r,s){const a=Tt.get(e);if(!a)throw new Error("Cache snapshot does not exist");const i={"cwmp.downloadTimeout":"DOWNLOAD_TIMEOUT","cwmp.debug":"DEBUG","cwmp.retryDelay":"RETRY_DELAY","cwmp.sessionTimeout":"SESSION_TIMEOUT","cwmp.connectionRequestTimeout":"CONNECTION_REQUEST_TIMEOUT","cwmp.gpnNextLevel":"GPN_NEXT_LEVEL","cwmp.gpvBatchSize":"GPV_BATCH_SIZE","cwmp.cookiesPath":"COOKIES_PATH","cwmp.datetimeMilliseconds":"DATETIME_MILLISECONDS","cwmp.booleanLiteral":"BOOLEAN_LITERAL","cwmp.connectionRequestAllowBasicAuth":"CONNECTION_REQUEST_ALLOW_BASIC_AUTH","cwmp.maxCommitIterations":"MAX_COMMIT_ITERATIONS","cwmp.deviceOnlineThreshold":"DEVICE_ONLINE_THRESHOLD","cwmp.udpConnectionRequestPort":"UDP_CONNECTION_REQUEST_PORT"};if(!(t in a.config)){if(t in i){let e;return n&&n.id?e=n.id:s&&(e=s(["PARAM","DeviceID.ID"]),Array.isArray(e)&&(e=null)),k(i[t],e)}return null}const o=_t(a.config[t],n,r,s);return Array.isArray(o)?null:o}function Pt(e){const t=(e=e.trim()).split(" ",1)[0],n={method:t};return Object.assign(n,function(e){const t={},n=e.split(",");let r;for(;null!=(r=n.shift());){const e=r.split("=",1)[0];if(e.length===r.length){if(!r.trim())continue;throw new Error("Unable to parse auth header")}let s=r.slice(e.length+1);if(/^\s*"/.test(s)){for(;!/[^\\]"\s*$/.test(s);){const e=n.shift();if(null==e)throw new Error("Unable to parse auth header");s+=","+e}try{s=JSON.parse(s)}catch(e){throw new Error("Unable to parse auth header")}}else s=s.trim();t[e.trim()]=s}return t}(e.slice(t.length+1))),n}function Rt(e,t){return"Basic "+Buffer.from(`${e}:${t}`).toString("base64")}function Mt(e,t,n,r,s,a){const i=p.randomBytes(8).toString("hex"),o="00000001";let l;a.qop&&(l=-1!==a.qop.indexOf(",")?"auth":a.qop);const c=function(e,t,n,r,s,a,i,o,l,c){const u=p.createHash("md5");u.update(e).update(":").update(t).update(":").update(n);const d=u.digest("hex"),f=p.createHash("md5");if(f.update(s).update(":").update(a),"auth-int"===i){const e=p.createHash("md5").update(o||"").digest("hex");f.update(":").update(e)}const m=f.digest("hex"),h=p.createHash("md5");return h.update(d).update(":").update(r),i&&h.update(":").update(c).update(":").update(l).update(":").update(i),h.update(":").update(m),h.digest("hex")}(e,a.realm,t,a.nonce,r,n,l,s,i,o);let u=`Digest username="${e}"`;return u+=`,realm="${a.realm}"`,u+=`,nonce="${a.nonce}"`,u+=`,uri="${n}"`,a.algorithm&&(u+=",algorithm="+a.algorithm),l&&(u+=`,qop=${l},nc=${o},cnonce="${i}"`),u+=`,response="${c}"`,a.opaque&&(u+=`,opaque="${a.opaque}"`),u}function jt(e,t){return new Promise((n,r)=>{p.pbkdf2(e,t,1e4,128,"sha512",(e,t)=>{e?r(e):n(t.toString("hex"))})})}const Ut=+k("EXT_TIMEOUT"),Ht={},qt=new Map;function Ft(e){const t=qt.get(e[0]);t&&(qt.delete(e[0]),t({fault:e[1],value:e[2]}))}function Bt(e){return new Promise(t=>{const n=Date.now()+5e3;e.kill();const r=setInterval(()=>{e.connected?Date.now()>n&&(e.kill("SIGKILL"),clearInterval(r),t()):(clearInterval(r),t())},100)})}async function Wt(){await Promise.all(Object.entries(Ht).map(([e,t])=>(delete Ht[e],Bt(t))))}const Jt=""+k("DEBUG_FILE"),zt=""+k("DEBUG_FORMAT"),Gt=new WeakMap;function Vt(e){let t=Gt.get(e);return t||(t=new Date,Gt.set(e,t)),t}function Zt(e,n,r,s){if(!Jt)return;const a={event:"outgoing UDP message",timestamp:new Date,remoteAddress:e,deviceId:n,remotePort:r,body:s};if("yaml"===zt)t.appendFileSync(Jt,"---\n"+g.stringify(a));else{if("json"!==zt)throw new Error("Unrecognized DEBUG_FORMAT option");t.appendFileSync(Jt,JSON.stringify(a)+"\n")}}async function Kt(e,t){let n,r;const s=await yt(e,{},0,async e=>{if(!n&&Array.isArray(e)&&"FUNC"===e[0]){if("EXT"===e[1]){if("string"!=typeof e[2]||"string"!=typeof e[3])return null;for(let t=4;t<e.length;t++)if(Array.isArray(e[t]))return null;const{fault:t,value:n}=await(s=e.slice(2),new Promise(e=>{const t=s[0],n=p.randomBytes(8).toString("hex");if(qt.set(n,e),!Ht[t]){const r=h.spawn(N+"/bin/genieacs-ext",[t],{stdio:["inherit","inherit","inherit","ipc"]});Ht[t]=r,r.on("error",s=>{Ht[t]===r&&(qt.delete(n)&&e({fault:{code:s.name,message:s.message},value:null}),Bt(Ht[t]),delete Ht[t])}),r.on("disconnect",()=>{Ht[t]===r&&delete Ht[t]}),r.on("message",Ft)}return setTimeout(()=>{qt.delete(n)&&e({fault:{code:"timeout",message:"Extension timed out"},value:null})},Ut),!!Ht[t].connected&&Ht[t].send([n,s.slice(1)])}));return t?null:n}if("AUTH"===e[1])return Array.isArray(e[2])||Array.isArray(e[3])||(n=e[2]||"",r=e[3]||""),t}var s;return e});return[n,r,s]}function Xt(e,n,r,s){return new Promise((a,i)=>{const l=o.get(e,n=>{n.resume(),a({statusCode:n.statusCode,headers:n.headers}),r&&(function(e,n,r,s){if(!Jt)return;const a=new Date,i=e.connection,o={event:"outgoing HTTP request",timestamp:a,remoteAddress:i.remoteAddress,deviceId:n,connection:Vt(i),remotePort:r.port,method:r.method||"GET",url:r.path,headers:e.getHeaders(),body:s};if("yaml"===zt)t.appendFileSync(Jt,"---\n"+g.stringify(o));else{if("json"!==zt)throw new Error("Unrecognized DEBUG_FORMAT option");t.appendFileSync(Jt,JSON.stringify(o)+"\n")}}(l,s,e,null),function(e,n,r){if(!Jt)return;const s={event:"incoming HTTP response",timestamp:new Date,remoteAddress:e.connection.remoteAddress,deviceId:n,connection:Vt(e.connection),statusCode:e.statusCode,headers:e.headers,body:r};if("yaml"===zt)t.appendFileSync(Jt,"---\n"+g.stringify(s));else{if("json"!==zt)throw new Error("Unrecognized DEBUG_FORMAT option");t.appendFileSync(Jt,JSON.stringify(s)+"\n")}}(n,s,null))}).on("error",n=>{l.abort(),i(new Error("Device is offline")),r&&function(e,n,r,s){if(!Jt)return;const a={event:"outgoing HTTP request",timestamp:new Date,remoteAddress:r.hostname,deviceId:n,connection:null,remotePort:r.port,method:r.method,url:r.path,headers:e.getHeaders(),error:s.message};if("yaml"===zt)t.appendFileSync(Jt,"---\n"+g.stringify(a));else{if("json"!==zt)throw new Error("Unrecognized DEBUG_FORMAT option");t.appendFileSync(Jt,JSON.stringify(a)+"\n")}}(l,s,e,n)}).on("socket",e=>{e.setTimeout(n),e.on("timeout",()=>{l.abort()})})})}async function Yt(e,t){if(!t){const n=await W.findOne({_id:e});if(!n)throw new Error("No such device");t=function(e){const t={};return function e(t,n,r,s){for(const[a,i]of Object.entries(t)){if(!n)if("_lastInform"===a)r["Events.Inform"]={value:[Et(i),"xsd:dateTime"],valueTimestamp:s,writable:!1,writableTimestamp:s,object:!1,objectTimestamp:s};else if("_registered"===a)r["Events.Registered"]={value:[Et(i),"xsd:dateTime"],valueTimestamp:s,writable:!1,writableTimestamp:s,object:!1,objectTimestamp:s};else if("_lastBoot"===a)r["Events.1_BOOT"]={value:[Et(i),"xsd:dateTime"],valueTimestamp:s,writable:!1,writableTimestamp:s,object:!1,objectTimestamp:s};else if("_lastBootstrap"===a)r["Events.0_BOOTSTRAP"]={value:[Et(i),"xsd:dateTime"],valueTimestamp:s,writable:!1,writableTimestamp:s,object:!1,objectTimestamp:s};else if("_id"===a)r["DeviceID.ID"]={value:[i,"xsd:string"],valueTimestamp:s,writable:!1,writableTimestamp:s,object:!1,objectTimestamp:s};else if("_deviceId"===a)r["DeviceID.Manufacturer"]={value:[i._Manufacturer,"xsd:string"],valueTimestamp:s,writable:!1,writableTimestamp:s,object:!1,objectTimestamp:s},r["DeviceID.OUI"]={value:[i._OUI,"xsd:string"],valueTimestamp:s,writable:!1,writableTimestamp:s,object:!1,objectTimestamp:s},r["DeviceID.ProductClass"]={value:[i._ProductClass,"xsd:string"],valueTimestamp:s,writable:!1,writableTimestamp:s,object:!1,objectTimestamp:s},r["DeviceID.SerialNumber"]={value:[i._SerialNumber,"xsd:string"],valueTimestamp:s,writable:!1,writableTimestamp:s,object:!1,objectTimestamp:s};else if("_tags"===a){r.Tags={writable:!1,writableTimestamp:s,object:!0,objectTimestamp:s};for(const e of i)r["Tags."+e]={value:[!0,"xsd:boolean"],valueTimestamp:s,writable:!0,writableTimestamp:s,object:!1,objectTimestamp:s}}if(a.startsWith("_"))continue;let o=s;n?+t._timestamp>s&&(o=+t._timestamp):o=+(t._timestamp||1);const l={};null!=i._value?(l.value=[i._value instanceof Date?+i._value:i._value,i._type],l.valueTimestamp=+(i._timestamp||o),l.object=!1,l.objectTimestamp=o):null!=i._object&&(l.object=i._object,l.objectTimestamp=o),null!=i._writable&&(l.writable=i._writable,l.writableTimestamp=o),null!=i._notification&&(l.notification=i._notification,l.notificationTimestamp=+i._attributesTimestamp||1),null!=i._accessList&&(l.accessList=i._accessList,l.accessListTimestamp=+i._attributesTimestamp||1);const c=n?`${n}.${a}`:a;r[c]=l,(l.object||null==i.object)&&e(i,c,r,o)}}(e,"",t,new Date(e._lastInform||1).getTime()),t}(n)}let n,r,s,a;t["InternetGatewayDevice.ManagementServer.ConnectionRequestURL"]?(n=(t["InternetGatewayDevice.ManagementServer.ConnectionRequestURL"].value||[""])[0],r=((t["InternetGatewayDevice.ManagementServer.UDPConnectionRequestAddress"]||{}).value||[""])[0],s=((t["InternetGatewayDevice.ManagementServer.ConnectionRequestUsername"]||{}).value||[""])[0],a=((t["InternetGatewayDevice.ManagementServer.ConnectionRequestPassword"]||{}).value||[""])[0]):(n=(t["Device.ManagementServer.ConnectionRequestURL"].value||[""])[0],r=((t["Device.ManagementServer.UDPConnectionRequestAddress"]||{}).value||[""])[0],s=((t["Device.ManagementServer.ConnectionRequestUsername"]||{}).value||[""])[0],a=((t["Device.ManagementServer.ConnectionRequestPassword"]||{}).value||[""])[0]);const i=c.parse(n).host,l=e=>{if(!Array.isArray(e))return e;if("PARAM"===e[0]&&"string"==typeof e[1]){let n=e[1];if("id"===n)n="DeviceID.ID";else if("serialNumber"===n)n="DeviceID.SerialNumber";else if("productClass"===n)n="DeviceID.ProductClass";else if("oui"===n)n="DeviceID.OUI";else{if("remoteAddress"===n)return i;if("username"===n)return s;if("password"===n)return a}const r=t[n];if(r&&r.value)return r.value[0]}else if("FUNC"===e[0]){if("REMOTE_ADDRESS"===e[1])return i;if("USERNAME"===e[1])return s;if("PASSWORD"===e[1])return a}return e},u=await async function(){return Date.now()>At&&await kt(),vt}(),d=Date.now(),f=+Lt(u,"cwmp.udpConnectionRequestPort",{},d,l),h=+Lt(u,"cwmp.connectionRequestTimeout",{},d,l),g=!!Lt(u,"cwmp.connectionRequestAllowBasicAuth",{},d,l);let w=function(e,t){const n=Tt.get(e);if(!n)throw new Error("Cache snapshot does not exist");return n.config[t]}(u,"cwmp.connectionRequestAuth");void 0===w&&(w=["FUNC","AUTH",["PARAM","username"],["PARAM","password"]]),w=_t(w,{},d,l);const _=!!Lt(u,"cwmp.debug",{},d,l);let y;r&&(y=async function(e,t,n=0,r,s){const[a,i]=e.split(":",2),o=i?parseInt(i):80,l=Date.now(),c=m.createSocket({type:"udp4",reuseAddr:!0});let u,d;for(n&&c.bind({port:n,exclusive:!0}),[u,d,t]=await Kt(t,null),null==u&&(u=""),null==d&&(d="");null!=u&&null!=d;){const n=Math.trunc(l/1e3),i=Math.trunc(4294967295*Math.random()),f=p.randomBytes(8).toString("hex"),m=`GET http://${e}?ts=${n}&id=${i}&un=${u}&cn=${f}&sig=${p.createHmac("sha1",d).update(`${n}${i}${u}${f}`).digest("hex")} HTTP/1.1\r\nHost: ${e}\r\n\r\n`,h=Buffer.from(m);for(let e=0;e<3;++e)await new Promise((e,t)=>{c.send(h,0,h.length,o,a,n=>{n?t(n):e(),r&&Zt(a,s,o,m)})});[u,d,t]=await Kt(t,null)}c.close()}(r,w,f,_,e));try{await async function(e,t,n,r,s,a){const i=c.parse(e);if("http:"!==i.protocol)throw new Error("Invalid connection request URL or protocol");let l,u,d;for(i.agent=new o.Agent({maxSockets:1,keepAlive:!0});!l||null!=u&&null!=d;){let e=i;if(l)if("Basic"===l.method){if(!n)throw new Error("Basic HTTP authentication not allowed");e=Object.assign({headers:{Authorization:Rt(u||"",d||"")}},i)}else{if("Digest"!==l.method)throw new Error("Unrecognized auth method");e=Object.assign({headers:{Authorization:Mt(u,d,i.path,"GET",null,l)}},i)}let o=await Xt(e,r,s,a);if(0===o.statusCode&&l&&(o=await Xt(e,r,s,a)),0===o.statusCode)throw new Error("Device is offline");if(200===o.statusCode||204===o.statusCode)return;if(401!==o.statusCode||!o.headers["www-authenticate"])throw new Error("Unexpected response code from device: "+o.statusCode);l=Pt(o.headers["www-authenticate"]),[u,d,t]=await Kt(t,!1)}throw new Error("Incorrect connection request credentials")}(n,w,g,h,_,e)}catch(e){if(!y)throw e;await y}}async function Qt(e,t,n){await new Promise(e=>setTimeout(e,500));if(!await B.findOne({_id:t},{projection:{_id:1}}))return"completed";const r={_id:`${e}:task_${t}`};return await Z.findOne(r,{projection:{_id:1}})?"fault":(n-=500)<=0?"timeout":Qt(e,t,n)}function en(e){e.timestamp=new Date(e.timestamp||Date.now()),e.expiry&&(e.expiry instanceof Date||isNaN(e.expiry)?e.expiry=new Date(e.expiry):e.expiry=new Date(e.timestamp.getTime()+1e3*+e.expiry));const t=e=>!(!Array.isArray(e)||e.length<2||"string"!=typeof e[0]||!e[0].length||!["string","boolean","number"].includes(typeof e[1])||null!=e[2]&&"string"!=typeof e[2]);switch(e.name){case"getParameterValues":if(!Array.isArray(e.parameterNames)||!e.parameterNames.length)throw new Error("Missing 'parameterNames' property");for(const t of e.parameterNames)if("string"!=typeof t||!t.length)throw new Error(`Invalid parameter name '${t}'`);break;case"setParameterValues":if(!Array.isArray(e.parameterValues)||!e.parameterValues.length)throw new Error("Missing 'parameterValues' property");for(const n of e.parameterValues)if(!t(n))throw new Error(`Invalid parameter value '${n}'`);break;case"refreshObject":if("string"!=typeof e.objectName)throw new Error("Missing 'objectName' property");break;case"deleteObject":if("string"!=typeof e.objectName||!e.objectName.length)throw new Error("Missing 'objectName' property");break;case"addObject":if(null!=e.parameterValues){if(!Array.isArray(e.parameterValues))throw new Error("Invalid 'parameterValues' property");for(const n of e.parameterValues)if(!t(n))throw new Error(`Invalid parameter value '${n}'`)}break;case"download":if(!e.file){if("string"!=typeof e.fileType||!e.fileType.length)throw new Error("Missing 'fileType' property");if("string"!=typeof e.fileName||!e.fileName.length)throw new Error("Missing 'fileName' property")}if(null!=e.targetFileName&&"string"!=typeof e.targetFileName)throw new Error("Invalid 'targetFileName' property");break;case"provisions":if(!Array.isArray(e.provisions)||!e.provisions.every(e=>e.every(e=>null==e||["boolean","number","string"].includes(typeof e))))throw new Error("Invalid 'provisions' property")}return e}async function tn(e){if(e&&!Array.isArray(e))e=[e];else if(!e||0===e.length)return e||[];for(const t of e)en(t),t.uniqueKey&&await B.deleteOne({device:t.device,uniqueKey:t.uniqueKey});return await B.insertMany(e),e}const nn="1.0.0+20210106062213";const rn=/^\/user\/signup$/,sn=/^\/user\/login$/,an=/^\/user\/change$/,on=/^\/devices\/([a-zA-Z0-9\-_%]+)\/tasks\/?$/,ln=/^\/tasks\/([a-zA-Z0-9\-_%]+)(\/[a-zA-Z_]*)?$/,cn=/^\/devices\/([a-zA-Z0-9\-_%]+)\/tags\/([a-zA-Z0-9\-_%]+)\/?$/,un=/^\/presets\/([a-zA-Z0-9\-_%]+)\/?$/,dn=/^\/objects\/([a-zA-Z0-9\-_%]+)\/?$/,pn=/^\/files\/([a-zA-Z0-9%!*'();:@&=+$,?#[\]\-_.~]+)\/?$/,fn=/^\/ping\/([a-zA-Z0-9\-_.:]+)\/?$/,mn=/^\/([a-zA-Z0-9_]+)\/?$/,hn=/^\/devices\/([a-zA-Z0-9\-_%]+)\/?$/,gn=/^\/provisions\/([a-zA-Z0-9\-_%]+)\/?$/,wn=/^\/virtual_parameters\/([a-zA-Z0-9\-_%]+)\/?$/,_n=/^\/faults\/([a-zA-Z0-9\-_%:]+)\/?$/,yn=/^\/manufacturers\/([a-zA-Z0-9\-_%:.,]+)\/?$/,On=/^\/models\/([a-zA-Z0-9\-_%:]+)\/?$/,En=/^\/groups\/([a-zA-Z0-9\-_%:]+)(\/[a-zA-Z_]*)?$/,Sn=/^\/parameter_tasks\/([a-zA-Z0-9\-_%:]+)(\/[a-zA-Z_]*)?$/;function Tn(e,t,n){throw e.type="error",e.reason=`${t.name}: ${t.message}`,n&&(n.writeHead(500,{Connection:"close"}),n.end(`${t.name}: ${t.message}`)),t}function vn(e,t){const s=[];let a=0;if(t.setHeader("HACS-Version",nn),t.setHeader("Access-Control-Allow-Origin","http://localhost:3000"),t.setHeader("Access-Control-Allow-Headers","Content-Type, Authorization, fileType, oui, productClass, version"),"OPTIONS"===e.method)return t.setHeader("Access-Control-Max-Age","3600"),t.setHeader("Access-Control-Allow-Methods","DELETE, POST, GET, PUT, OPTIONS"),t.writeHead(200),void t.end();e.addListener("data",e=>{s.push(e),a+=e.length}),e.addListener("end",async()=>{const i=function(){const e=Buffer.allocUnsafe(a);let t=0;for(const n of s)n.copy(e,t,0,n.length),t+=n.length;return e}(),o=c.parse(e.url,!0),l={type:"info",remoteAddress:e.connection.remoteAddress,userName:null,method:e.method,message:o.pathname,target:null,reason:null,event:null};try{if(sn.test(o.pathname)&&"POST"===e.method){const e=JSON.parse(i.toString());l.target=e.username;let n=await Q.findOne({_id:e.username});if(!n)return t.writeHead(401),t.end("Unauthorized"),l.type="warn",void(l.reason="Unauthorized");if(await jt(e.password,n.salt)==n.password){t.writeHead(200,"ok",{"Content-Type":"application/json"});const r=w.sign({username:e.username,roles:n.roles},"gloovirSecret",{expiresIn:"2h"});return void t.end(JSON.stringify({User:e.username,Authorization:r}))}return t.writeHead(401),t.end("Unauthorized"),l.type="warn",void(l.reason="Unauthorized")}if(rn.test(o.pathname)&&"PUT"===e.method){const e=JSON.parse(i.toString());if(!e)return t.writeHead(404),t.end("Bad Request"),l.type="warn",void(l.reason="Bad Request");if(!e.username||!e.password||!e.roles)return t.writeHead(400,"bad request"),t.end("missing value"),l.type="warn",void(l.reason="missing value");l.target=e.username;let n=await Q.findOne({_id:e.username}),r=await(m=64,new Promise((e,t)=>{p.randomBytes(m,(n,r)=>{n?t(n):e(r.toString("hex"))})})),s=await jt(e.password,r),a={_id:e.username,password:s,roles:e.roles,salt:r};n?(t.writeHead(400,"bad request"),t.end("duplicated ID"),l.type="warn",l.reason="duplicated ID"):(await Q.replaceOne({_id:e.username},a,{upsert:!0}),lt("presets_hash").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})}))}else{let s;if(!e.headers.authorization)return t.writeHead(401),t.end("Unauthorized"),l.type="warn",void(l.reason="Unauthorized");try{s=w.verify(e.headers.authorization,"gloovirSecret")}catch(e){return t.writeHead(401),t.end("Unauthorized"),l.type="warn",void(l.reason="Unauthorized")}if(l.userName=s.username,un.test(o.pathname)){const n=u.unescape(un.exec(o.pathname)[1]);if(l.target=n,"PUT"===e.method){const e=JSON.parse(i.toString());e._id=n,await J.replaceOne({_id:n},e,{upsert:!0}),lt("presets_hash").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})}else"DELETE"===e.method?(await J.deleteOne({_id:n}),lt("presets_hash").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})):(t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"),l.type="warn",l.reason="405 Method Not Allowed")}else if(dn.test(o.pathname)){const n=u.unescape(dn.exec(o.pathname)[1]);if(l.target=n,"PUT"===e.method){const e=JSON.parse(i.toString());e._id=n,await z.replaceOne({_id:n},e,{upsert:!0}),lt("presets_hash").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})}else"DELETE"===e.method?(await z.deleteOne({_id:n}),lt("presets_hash").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})):(t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"),l.type="warn",l.reason="405 Method Not Allowed")}else if(gn.test(o.pathname)){const n=u.unescape(gn.exec(o.pathname)[1]);if(l.target=n,"PUT"===e.method){const e={_id:n,script:i.toString()};try{new d.Script(`"use strict";(function(){\n${e.script}\n})();`)}catch(e){return t.writeHead(400),t.end(`${e.name}: ${e.message}`),l.type="warn",void(l.reason=`${e.name}: ${e.message}`)}await G.replaceOne({_id:n},e,{upsert:!0}),lt("presets_hash").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})}else"DELETE"===e.method?(await G.deleteOne({_id:n}),lt("presets_hash").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})):(t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"),l.type="warn",l.reason="405 Method Not Allowed")}else if(wn.test(o.pathname)){const n=u.unescape(wn.exec(o.pathname)[1]);if(l.target=n,"PUT"===e.method){const e={_id:n,script:i.toString()};try{new d.Script(`"use strict";(function(){\n${e.script}\n})();`)}catch(e){return t.writeHead(400),t.end(`${e.name}: ${e.message}`),l.type="warn",void(l.reason=`${e.name}: ${e.message}`)}await V.replaceOne({_id:n},e,{upsert:!0}),lt("presets_hash").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})}else"DELETE"===e.method?(await V.deleteOne({_id:n}),lt("presets_hash").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})):(t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"),l.type="warn",l.reason="405 Method Not Allowed")}else if(cn.test(o.pathname)){const n=cn.exec(o.pathname),r=u.unescape(n[1]),s=u.unescape(n[2]);l.target=`{"device": "${r}", "tag": "${s}"}`,"POST"===e.method?(await W.updateOne({_id:r},{$addToSet:{_tags:s}}),t.writeHead(200),t.end()):"DELETE"===e.method?(await W.updateOne({_id:r},{$pull:{_tags:s}}),t.writeHead(200),t.end()):(t.writeHead(405,{Allow:"POST, DELETE"}),t.end("405 Method Not Allowed"),l.type="warn",l.reason="405 Method Not Allowed")}else if(_n.test(o.pathname))if("DELETE"===e.method){const e=u.unescape(_n.exec(o.pathname)[1]);l.target=e;const n=e.split(":",1)[0],s=e.slice(n.length+1);if(await Z.deleteOne({_id:e}),s.startsWith("task_")){const e=new r.ObjectID(s.slice(5));return await B.deleteOne({_id:e}),void lt(n+"_tasks_faults_operations").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})}lt(n+"_tasks_faults_operations").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})}else t.writeHead(405,{Allow:"DELETE"}),t.end("405 Method Not Allowed"),l.type="warn",l.reason="405 Method Not Allowed";else if(on.test(o.pathname))if(l.message="tasks","POST"===e.method){const e=u.unescape(on.exec(o.pathname)[1]);if(l.target=e,i.length){const n=JSON.parse(i.toString());l.event=n.name,n.device=e,tn(n).then(()=>{lt(e+"_tasks_faults_operations").then(()=>{null!=o.query.connection_request?Yt(e).then(()=>{const r=o.query.timeout&&parseInt(o.query.timeout)||k("DEVICE_ONLINE_THRESHOLD",e);Qt(e,n._id,r).then(e=>{"timeout"===e?(t.writeHead(202,"Task queued but not processed",{"Content-Type":"application/json"}),t.end(JSON.stringify(n)),l.reason=JSON.stringify(n)):"fault"===e?B.findOne({_id:n._id},(e,n)=>{e?Tn(l,e,t):(t.writeHead(202,"Task faulted",{"Content-Type":"application/json"}),t.end(JSON.stringify(n)),l.reason=JSON.stringify(n))}):(t.writeHead(200,{"Content-Type":"application/json"}),t.end(JSON.stringify(n)),l.reason=JSON.stringify(n))}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})}).catch(e=>{t.writeHead(202,e.message,{"Content-Type":"application/json"}),t.end(JSON.stringify(n)),l.reason=JSON.stringify(n)}):(t.writeHead(202,{"Content-Type":"application/json"}),t.end(JSON.stringify(n)),l.reason=JSON.stringify(n))}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})}else null!=o.query.connection_request?Yt(e).then(()=>{t.writeHead(200),t.end()}).catch(e=>{t.writeHead(504),t.end(`${e.name}: ${e.message}`),l.type="error",l.reason=`${e.name}: ${e.message}`}):(t.writeHead(400),t.end(),l.type="warn")}else t.writeHead(405,{Allow:"POST"}),t.end("405 Method Not Allowed");else if(ln.test(o.pathname)){const n=ln.exec(o.pathname),s=u.unescape(n[1]);l.target=s;const a=n[2];if(a&&"/"!==a)"/retry"===a?"POST"===e.method?B.findOne({_id:new r.ObjectID(s)},{projection:{device:1}},(e,n)=>{if(e)return void Tn(l,e,t);const r=n.device;Z.deleteOne({_id:`${r}:task_${s}`},e=>{e?Tn(l,e,t):lt(r+"_tasks_faults_operations").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})})}):(t.writeHead(405,{Allow:"POST"}),t.end("405 Method Not Allowed"),l.type="warn",l.reason="405 Method Not Allowed"):(t.writeHead(404),t.end(),l.type="warn");else if("DELETE"===e.method){let e=await B.findOne({_id:new r.ObjectID(s)},{projection:{device:1}});if(!e)return t.writeHead(404),t.end("Task not found"),l.type="warn",void(l.reason="Task not found");const n=e.device;B.deleteOne({_id:new r.ObjectID(s)},e=>{e?Tn(l,e,t):Z.deleteOne({_id:`${n}:task_${s}`},e=>{e?Tn(l,e,t):lt(n+"_tasks_faults_operations").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})})})}else t.writeHead(405,{Allow:"PUT DELETE"}),t.end("405 Method Not Allowed"),l.type="warn",l.reason="405 Method Not Allowed"}else if(pn.test(o.pathname)){const n=u.unescape(pn.exec(o.pathname)[1]);if(l.target=n,"PUT"===e.method){const s={fileType:e.headers.filetype,oui:e.headers.oui,productClass:e.headers.productclass,version:e.headers.version},a=new r.GridFSBucket(oe.db());a.delete(n,()=>{const e=a.openUploadStreamWithId(n,n,{metadata:s});e.on("error",e=>{Tn(l,e,t)}),e.end(i,()=>{t.writeHead(201),t.end()})})}else if("DELETE"===e.method){new r.GridFSBucket(oe.db()).delete(n,e=>{if(e)return e.message.startsWith("FileNotFound")?(t.writeHead(404),t.end("404 Not Found"),l.type="warn",void(l.reason="404 Not Found")):void Tn(l,e,t);t.writeHead(200),t.end()})}else t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"),l.type="warn",l.reason="405 Method Not Allowed"}else if(fn.test(o.pathname)){const e=u.unescape(fn.exec(o.pathname)[1]);l.target=e,function(e,t){let r,s,a;switch(console.log("platform :",n.platform()),n.platform()){case"linux":r="ping -w 1 -i 0.2 -c 3 "+e,s=/(\d+) packets transmitted, (\d+) received, ([\d.]+)% packet loss[^]*([\d.]+)\/([\d.]+)\/([\d.]+)\/([\d.]+)/,a=/(\d+) packets transmitted, (\d+) received, ([\d.]+)% packet loss/;break;case"freebsd":r="ping -t 1 -c 3 "+e,s=/(\d+) packets transmitted, (\d+) packets received, ([\d.]+)% packet loss\nround-trip min\/avg\/max\/stddev = ([\d.]+)\/([\d.]+)\/([\d.]+)\/([\d.]+) ms/,a=/(\d+) packets transmitted, (\d+) packets received, ([\d.]+)% packet loss/;break;case"darwin":r="ping -W 1 -i 0.2 -c 3 "+e,s=/(\d+) packets transmitted, (\d+) received, ([\d.]+)% packet loss[^]*([\d.]+)\/([\d.]+)\/([\d.]+)\/([\d.]+)/,a=/(\d+) packets transmitted, (\d+) received, ([\d.]+)% packet loss/;break;default:return t(new Error("Platform not supported"))}h.exec(r,(e,n)=>{let r;if(n){const e=n.match(s);if(e)r={packetsTransmitted:+e[1],packetsReceived:+e[2],packetLoss:+e[3],min:+e[4],avg:+e[5],max:+e[6],mdev:+e[7]};else{const e=n.match(a);e&&(r={packetsTransmitted:+e[1],packetsReceived:+e[2],packetLoss:+e[3],min:null,avg:null,max:null,mdev:null})}}t(e,r,n)})}(e,(e,n,r)=>{if(e)return n?(t.writeHead(404,{"Cache-Control":"no-cache"}),t.end(`${e.name}: ${e.message}`),l.type="warn",void(l.reason=`${e.name}: ${e.message}`)):(t.writeHead(500,{Connection:"close"}),t.end(`${e.name}: ${e.message}`),l.type="error",void(l.reason=`${e.name}: ${e.message}`));t.writeHead(200,{"Content-Type":"text/plain","Cache-Control":"no-cache"}),t.end(r),l.reason=r})}else if(hn.test(o.pathname)){const n=u.unescape(hn.exec(o.pathname)[1]);let r=JSON.parse(i.toString());if(console.log("devices:",r),"PUT"==e.method){let e,n=[];if(!Array.isArray(r)){let e=[];e.push(r),r=e}r.forEach(e=>{n.push({_id:`${e._OUI}-${e._ProductClass}-${e._SerialNumber}`,_deviceId:{_Manufacturer:e._Manufacturer,_OUI:e._OUI,_ProductClass:e._ProductClass,_SerialNumber:e._SerialNumber},Device:{DeviceInfo:{HardwareVersion:{_value:e.HardwareVersion},SoftwareVersion:{_value:e.SoftwareVersion}},Ethernet:{Interface:{1:{MACAddress:{_value:e.MACAddress}}}}}})}),e=await W.insertMany(n),t.writeHead(200),t.end(JSON.stringify({result:e.result}))}else{if("DELETE"!=e.method)return t.writeHead(405,{Allow:"DELETE"}),t.end("405 Method Not Allowed"),l.type="warn",void(l.reason="405 Method Not Allowed");if(r.deleteIds){let e=await W.deleteMany({_id:{$in:r.deleteIds}});console.log("delete many:",e),lt("presets_hash").then(()=>{t.writeHead(200),t.end(JSON.stringify({result:e.result}))}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})}else l.target=n,console.log("delete solo:",r),async function(e){await Promise.all([B.deleteMany({device:e}),W.deleteOne({_id:e}),Z.deleteMany({_id:{$regex:`^${L(e)}\\:`}}),X.deleteMany({_id:{$regex:`^${L(e)}\\:`}}),lt(e+"_tasks_faults_operations")])}(n).then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})}}else if(mn.test(o.pathname)){let n=mn.exec(o.pathname)[1];l.target=n;let s=n.indexOf("_");for(;s++>=0;){const e=s<n.length?n[s].toUpperCase():"";n=n.slice(0,s-1)+e+n.slice(s+1),s=n.indexOf("_",s)}if("GET"!==e.method&&"HEAD"!==e.method)return t.writeHead(405,{Allow:"GET, HEAD"}),t.end("405 Method Not Allowed"),l.type="warn",void(l.reason="405 Method Not Allowed");const a=ye[n+"Collection"];if(!a)return t.writeHead(404),t.end("404 Not Found"),l.type="warn",void(l.reason="404 Not Found");let i={};if(o.query.query)try{i=JSON.parse(o.query.query)}catch(e){return t.writeHead(400),t.end(`${e.name}: ${e.message}`),l.type="warn",void(l.reason=`${e.name}: ${e.message}`)}switch(n){case"devices":case"groups":case"manufacturers":case"models":case"parameterTasks":i=function e(t){const n={};for(const[r,s]of Object.entries(t))if("$"===r[0])n[r]=s.map(t=>e(t));else{const e=et(r,s);if(e.length>1)if(n.$and=n.$and||[],!s||null==s.$ne&&null==s.$not)n.$and.push({$or:e});else{if(Object.keys(s).length>1)throw new Error("Cannot mix $ne or $not with other operators");for(const t of e)n.$an.push(t)}else Object.assign(n,e[0])}return n}(i);break;case"tasks":i=tt(i,{_id:e=>new r.ObjectID(e),timestamp:e=>new Date(e),retries:Number});break;case"faults":i=tt(i,{timestamp:e=>new Date(e),retries:Number})}let c=null;if(o.query.projection){c={};for(const e of o.query.projection.split(","))c[e.trim()]=1}if(o.query.distinct)return console.log("value:",o.query.distinct),void a.distinct(o.query.distinct).then(e=>{console.log("gyubeom r:",e),t.writeHead(200),t.end(JSON.stringify(e))}).catch(e=>{console.log("gyubeom e:",e)});const u=a.find(i,{projection:c});if(o.query.sort){const e=JSON.parse(o.query.sort),t={};for(const[r,s]of Object.entries(e))"_"!==r[r.lastIndexOf(".")+1]&&"devices"===n?t[r+"._value"]=s:t[r]=s;u.sort(t)}o.query.skip&&u.skip(parseInt(o.query.skip)),o.query.limit&&u.limit(parseInt(o.query.limit)),u.count(!1,(n,r)=>{if(n)return void Tn(l,n);if(t.writeHead(200,{"Content-Type":"application/json",total:r}),"HEAD"===e.method)return void t.end();t.write("[\n");let a={total:r};t.write(JSON.stringify(a)),r>0&&t.write(",\n"),s=0,u.forEach(e=>{s++&&t.write(",\n"),t.write(JSON.stringify(e))},e=>{e?Tn(l,e):t.end("\n]")})})}else if(yn.test(o.pathname)){const n=u.unescape(yn.exec(o.pathname)[1]);l.target=n;const r=JSON.parse(i.toString());if("PUT"===e.method)r._id=n,te.replaceOne({_id:n},r,{upsert:!0},e=>{e?Tn(l,e,t):lt("presets_hash").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})});else if("DELETE"===e.method){let e=await te.deleteMany({_id:{$in:r.deleteIds}});lt("presets_hash").then(()=>{t.writeHead(200),t.end(JSON.stringify({result:e.result}))}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})}else t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"),l.type="warn",l.reason="405 Method Not Allowed"}else if(On.test(o.pathname)){const n=u.unescape(On.exec(o.pathname)[1]);l.target=n;const r=JSON.parse(i.toString());if("PUT"===e.method)r._id=n,ne.replaceOne({_id:n},r,{upsert:!0},e=>{e?Tn(l,e,t):lt("presets_hash").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})});else if("DELETE"===e.method){let e=await ne.deleteMany({_id:{$in:r.deleteIds}});lt("presets_hash").then(()=>{t.writeHead(200),t.end(JSON.stringify({result:e.result}))}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})}else t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"),l.type="warn",l.reason="405 Method Not Allowed"}else if(an.test(o.pathname)){const n=JSON.parse(i.toString());if("DELETE"===e.method){if(!n.length||0==n.length)return t.writeHead(400,"bad request"),t.end("missing value"),l.type="warn",void(l.reason="missing value");if(l.target=n,"admin"!=n.roles&&(n.length>1||n[0].username!=s.username))return t.writeHead(400),t.end("Unauthorized"),l.type="warn",void(l.reason="Unauthorized");let e=[];n.forEach(t=>{e.push(t.username)}),Q.deleteMany({_id:{$in:e}},(e,n)=>{if(e)return void Tn(l,e,t);let r={n:n.result.n,ok:n.result.ok,deletedCount:n.deletedCount};lt("presets_hash").then(()=>{t.writeHead(200),t.end(JSON.stringify(r))}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})})}else if("POST"===e.method){if(l.target=n.username,"admin"!=s.roles&&s.username!=n.username)return t.writeHead(400),t.end("Unauthorized"),l.type="warn",void(l.reason="Unauthorized");if(!n.username||!n.password||!n.roles)return t.writeHead(400,"bad request"),t.end("missing value"),l.type="warn",void(l.reason="missing value");if("admin"!=s.roles&&"admin"==n.roles)return t.writeHead(400),t.end("Unauthorized"),l.type="warn",void(l.reason="Unauthorized");let e=await Q.findOne({_id:n.username});if(e){let r=await jt(n.password,e.salt);Q.updateOne({_id:n.username},{$set:{password:r,roles:n.roles}},(e,n)=>{e?Tn(l,e,t):(t.writeHead(200),t.end())})}else t.writeHead(400),t.end("bad request"),l.type="warn",l.reason="bad request"}else t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"),l.type="warn",l.reason="405 Method Not Allowed"}else if(En.test(o.pathname)){const n=En.exec(o.pathname),r=u.unescape(n[1]);l.target=r,console.log("body:",i.toString());const a=JSON.parse(i.toString());if(console.log("group:",a),"PUT"===e.method){if(!(a._manufacturer&&a._productClass&&a._startSN&&a._endSN))return t.writeHead(400,"bad request"),t.end("missing value"),l.type="warn",void(l.reason="missing value");if(n[2]&&"/"!==n[2]){if(n[2]&&"/edit"==n[2]){console.log("r2:",n[2]),await W.updateMany({_group:r},{$unset:{_group:""}});let e=await re.findOne({_id:r});console.log("originData :",e),console.log("where is login user????:",s),a._createUser=e._createUser,a._updateUser=s.username,a._createTime=e._createTime,a._updateTime=(new Date).toISOString()}}else{if(await re.findOne({_id:r}))return t.writeHead(400,"bad request"),t.end("There is already "+r),l.type="warn",void(l.reason="There is already "+r);a._createUser=s.username,a._updateUser=s.username,a._createTime=(new Date).toISOString(),a._updateTime=(new Date).toISOString()}let e=await re.replaceOne({_id:r},a,{upsert:!0}),i=await W.updateMany({"Device.Ethernet.Interface.1.MACAddress._value":{$gte:a._startSN,$lte:a._endSN},"_deviceId._Manufacturer":a._manufacturer,"_deviceId._ProductClass":a._productClass},{$set:{_group:r}});lt("presets_hash").then(()=>{t.writeHead(200);let n={group:e.result,device:i.result};t.end(JSON.stringify(n))}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})}else if("DELETE"===e.method){let e=await re.deleteMany({_id:{$in:a.deleteIds}}),n=await W.updateMany({_group:{$in:a.deleteIds}},{$unset:{_group:""}});lt("presets_hash").then(()=>{t.writeHead(200);let r={group:e.result,device:n.result};t.end(JSON.stringify(r))}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})}else t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"),l.type="warn",l.reason="405 Method Not Allowed"}else if(Sn.test(o.pathname)){const n=Sn.exec(o.pathname),r=u.unescape(n[1]);l.target=r;const a=n[2],c=JSON.parse(i.toString());if("PUT"===e.method)if(a&&"/"!==a){if("/publish"===a){l.message="parameter publish",t.writeHead(200),t.end();let e=c.publishIds,n=await Promise.all(e.map(async e=>{let n;try{let r;n=await ae.findOne({_id:e}),n||(console.log("fatal error"),n._status="Fatal Error"),console.log("task:",n),n._status="Testing",r=n._device._group?{_group:n._device._group}:{"_deviceId._Manufacturer":n._device._manufacturer,"_deviceId._ProductClass":n._device._model,"_deviceId._SerialNumber":n._device._serialNumber};let s=[],a=W.find(r,{projection:{_id:1}});for(;await a.hasNext();)s.push(await a.next());console.log("deviceIds:",s),n._deviceId=await Promise.all(s.map(async e=>{const r=e._id;let s={};s.name=n._name,"getParameterValues"==s.name?s.parameterNames=n._parameterValues:"setParameterValues"==s.name&&(s.parameterValues=n._parameterValues),l.event=s.name,s.device=r;try{if(await tn(s),await lt(r+"_tasks_faults_operations"),null!=o.query.connection_request){await Yt(r);const e=o.query.timeout&&parseInt(o.query.timeout)||k("DEVICE_ONLINE_THRESHOLD",r);let n=await Qt(r,s._id,e);console.log("task id::",s._id),"timeout"===n?console.log("timeout"):"fault"===n?B.findOne({_id:s._id},(e,n)=>{e&&Tn(l,e,t)}):console.log("go task right away")}else console.log("task is saved in the queue",s);return{_id:e._id,_timestamp:s.timestamp,_taskId:s._id}}catch(n){return console.log(n),setTimeout(()=>{Tn(l,n,t)}),e}}))}catch(e){console.log(e)}finally{return n}}));console.log("changed tasks22222:",n),n.map(e=>{console.log("changed object:",e),ae.replaceOne({_id:e._id},e)})}}else c._id=r,c._createUser||(c._createUser=s.username,c._createTime=(new Date).toISOString()),ae.replaceOne({_id:r},c,{upsert:!0},e=>{e?Tn(l,e,t):lt("presets_hash").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})});else if("DELETE"===e.method){let e=await ae.deleteMany({_id:{$in:c.deleteIds}});lt("presets_hash").then(()=>{t.writeHead(200),t.end(JSON.stringify({result:e.result}))}).catch(e=>{setTimeout(()=>{Tn(l,e,t)})})}else t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"),l.type="warn",l.reason="405 Method Not Allowed"}else t.writeHead(404),t.end("404 Not Found"),l.type="warn",l.reason="404 Not Found"}}catch(e){l.type="error",l.reason=`${e.name}: ${e.message}`,t.writable&&(t.writeHead(500,{Connection:"close"}),t.end(`${e.name}: ${e.message}`))}finally{console.log("log::",l);const e={userInfo:{remoteAddress:l.remoteAddress,username:l.userName},method:l.method,message:l.message,target:l.target,reason:l.reason,event:l.event};"info"==l.type?((f=e).severity="info",Fe(f)):"warn"==l.type?function(e){e.severity="warn",Fe(e)}(e):"error"==l.type&&function(e){e.severity="error",Fe(e)}(e)}var f,m})}!async function(){await ce(),function(e,r){if(be.hostname=n.hostname(),be.pid=process.pid,be.name="HACS-"+e,be.version=r,Ne=k(e.toUpperCase()+"_LOG_FILE"),Ie=k(e.toUpperCase()+"_ACCESS_LOG_FILE"),Ne&&(xe=t.createWriteStream(null,{fd:t.openSync(Ne,"a")}),De=t.fstatSync(xe.fd)),Ie){let e=Ie.split("/"),n="";for(let t=1;t<e.length-1;t++)n=n+"/"+e[t];console.log("dir:",n),t.existsSync(n)||t.mkdirSync(n),ke=t.createWriteStream(null,{fd:t.openSync(Ie,"a")}),Le=t.fstatSync(ke.fd)}const s=process.env.JOURNAL_STREAM;if(s){const[e,t]=s.split(":").map(parseInt);$e=De.dev===e&&De.ino===t,Ce=Le.dev===e&&Le.ino===t}(Ne||Ie)&&setTimeout(Pe,6e4-Date.now()%6e4).unref()}("nbi",nn);const r=k("NBI_INTERFACE"),s=k("NBI_PORT");function a(){setTimeout(i,5e3).unref(),Promise.all([ue(),ot(),Wt(),Ve.disconnect()]).catch(i)}function i(){Wt().finally(()=>{process.exit(1)})}if(Ve){const n={key:k("NBI_SSL_KEY"),cert:k("NBI_SSL_CERT")};let c=!1;process.on("uncaughtException",e=>{"ERR_IPC_DISCONNECTED"!==e.code&&(qe({message:"Uncaught exception",exception:e,pid:process.pid}),c=!0,Xe().then(a).catch(i))});const u=(e,t)=>{c&&t.setHeader("Connection","close"),vn(e,t)},d=Promise.all([it()]).then(()=>{!function(n,r,s,a,i,c=-1){if(Ke=a,s&&s.key&&s.cert){const n={key:s.key.split(":").map(n=>t.readFileSync(e.resolve(N,n.trim()))),cert:s.cert.split(":").map(n=>t.readFileSync(e.resolve(N,n.trim())))};Ze=l.createServer(n,Ke),null!=i&&Ze.on("secureConnection",i)}else Ze=o.createServer(Ke),null!=i&&Ze.on("connection",i);c>=0&&(Ze.keepAliveTimeout=c),Ze.listen(n,r)}(s,r,n,u)}).catch(e=>{setTimeout(()=>{throw e})});process.on("SIGINT",()=>{c=!0,d.finally(()=>{Xe().then(a).catch(i)})}),process.on("SIGTERM",()=>{c=!0,d.finally(()=>{Xe().then(a).catch(i)})})}else{const e=k("NBI_WORKER_PROCESSES");He({message:"genieacs-nbi starting",pid:process.pid,version:nn}),function(e,t,r){O.default.on("listening",(e,n)=>{4!==n.addressType&&6!==n.addressType||n.address!==r||n.port!==t||He({message:"Worker listening",pid:e.process.pid,address:n.address,port:n.port})}),O.default.on("exit",ze),e||(e=Math.max(2,n.cpus().length));for(let t=0;t<e;++t)Je()}(e,s,r),process.on("SIGINT",()=>{He({message:"Received signal SIGINT, exiting",pid:process.pid}),Ge()}),process.on("SIGTERM",()=>{He({message:"Received signal SIGTERM, exiting",pid:process.pid}),Ge()})}}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
